<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>硅谷外卖day05</title>
      <link href="/2019/04/08/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day05/"/>
      <url>/2019/04/08/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day05/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ynzy/vue-project/tree/master/gshop" target="_blank" rel="noopener">项目地址</a></p><h2 id="一、ShopRatings组件"><a href="#一、ShopRatings组件" class="headerlink" title="一、ShopRatings组件"></a>一、ShopRatings组件</h2><h4 id="1、计算满意度"><a href="#1、计算满意度" class="headerlink" title="1、计算满意度"></a>1、计算满意度</h4><ul><li>计算全部，满意，不满意评价数量</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- rating.length为评价总数，设计计算属性positiveSize计算满意的评价,总数-满意=不满意 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rating-type border-1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block positive <span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>2 }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    全部    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ratings.length}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block positive<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>0 }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    满意    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{positiveSize}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block negative<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>1 }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    不满意    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ratings.length - positiveSize}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token comment" spellcheck="true">//getters</span>  <span class="token comment" spellcheck="true">//计算满意度，看rateType的值是否为1，是则加一，0则不加</span><span class="token function">positiveSize</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> state<span class="token punctuation">.</span>ratings<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>preTotal<span class="token punctuation">,</span> rating<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> preTotal <span class="token operator">+</span> <span class="token punctuation">(</span>rating<span class="token punctuation">.</span>rateType<span class="token operator">===</span><span class="token number">0</span><span class="token operator">?</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//js</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    selectType<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment" spellcheck="true">// 选择的评价类型: 0满意, 1不满意, 2全部</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'positiveSize'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、列表的过滤显示"><a href="#2、列表的过滤显示" class="headerlink" title="2、列表的过滤显示"></a>2、列表的过滤显示</h4><ul><li>查看全部/满意/不满意的评价 &amp;&amp; 是否只有内容的评价</li><li>通过点击按钮改变当前显示状态，设计过滤新数组，判断符合条件的评价显示在页面上</li></ul><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ratingselect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rating-type border-1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 点击改变评价类型值 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block positive <span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>2 }<span class="token punctuation">"</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setSelectType(2)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      全部      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ratings.length}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block positive<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>0 }<span class="token punctuation">"</span></span>  <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setSelectType(0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      满意      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{positiveSize}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>block negative<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{active:selectType<span class="token punctuation">=</span><span class="token punctuation">=</span>1 }<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>setSelectType(1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      不满意      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ratings.length - positiveSize}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 点击改变是否显示有文本的状态 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switch<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{on: onlyShowText}<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggleOnlyShowText<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont icon-check<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>只看有内容的评价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      onlyShowText<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 是否只显示有文本的</span>      selectType<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment" spellcheck="true">// 选择的评价类型: 0满意, 1不满意, 2全部</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"info"</span><span class="token punctuation">,</span> <span class="token string">"ratings"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">fillterRatings</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//1.影响的数据有哪些</span>      <span class="token keyword">const</span> <span class="token punctuation">{</span> ratings<span class="token punctuation">,</span> onlyShowText<span class="token punctuation">,</span> selectType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//产生一个过滤新数组</span>      <span class="token keyword">return</span> ratings<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>rating <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> <span class="token punctuation">{</span>rateType<span class="token punctuation">,</span> text<span class="token punctuation">}</span> <span class="token operator">=</span> rating        <span class="token comment" spellcheck="true">/*         条件1：          评价类型和评价满意度参数，如果selectType=2，则显示全部，如果selectType和rateType相等，显示当前满意度的评价（满意或者不满意）          selectType：0/1/2          rateType： 0/1          selectType===2 || selectType===rateType         条件2：          如果不显示文本，则不用判断text有没有值，选择不显示。如果onlyShowText为true，要看text的值是否大于零进行显示          onlyShowText： true/false          text: 有值、没有值          !onlyShowText取反，为true时不需要判断text有没有值          !onlyShowText || text.length>0         */</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>selectType<span class="token operator">===</span><span class="token number">2</span> <span class="token operator">||</span> selectType<span class="token operator">===</span>rateType<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>onlyShowText <span class="token operator">||</span> text<span class="token punctuation">.</span>length<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">setSelectType</span><span class="token punctuation">(</span>selectType<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>selectType <span class="token operator">=</span> selectType<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    toggleOnlyShowText <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>onlyShowText <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>onlyShowText    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、ShopInfo组件"><a href="#二、ShopInfo组件" class="headerlink" title="二、ShopInfo组件"></a>二、ShopInfo组件</h2><ul><li>实现上下左右滑动，动态计算ul总宽度</li><li>总宽度=(li宽度+边距宽度)*图片数量-最后一个边距宽度</li><li>通过watch监视数据更新，数据刷新之后创建滑动对象，</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>活动与服务<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 设计数组，动态计算颜色类 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity-item<span class="token punctuation">"</span></span>      <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>supportClasses[support.type]<span class="token punctuation">"</span></span>      <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(support, index) in info.supports<span class="token punctuation">"</span></span>      <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{support.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{support.content}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>section-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>商家实景<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pic-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pic-list<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>picUl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pic-item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(pic, index) in info.pics<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>90<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    supportClasses<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"activity-green"</span><span class="token punctuation">,</span> <span class="token string">"activity-red"</span><span class="token punctuation">,</span> <span class="token string">"activity-orange"</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token function">_initScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//默认上下滑动</span>    <span class="token keyword">new</span> <span class="token class-name">BSscroll</span><span class="token punctuation">(</span><span class="token string">".shop-info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//计算ul宽度，执行水平滑动</span>    <span class="token keyword">const</span> ul <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>picUl<span class="token punctuation">;</span>    <span class="token keyword">const</span> liWidth <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//li宽度</span>    <span class="token keyword">const</span> space <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//右边距宽度</span>    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>pics<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//图片数量</span>    ul<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token punctuation">(</span>liWidth <span class="token operator">+</span> space<span class="token punctuation">)</span> <span class="token operator">*</span> count <span class="token operator">-</span> space <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">;</span>    <span class="token keyword">new</span> <span class="token class-name">BSscroll</span><span class="token punctuation">(</span><span class="token string">".pic-wrapper"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>      scrollX<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">// 水平滑动</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 刷新流程--> 更新数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 如果数据还没有, 直接结束</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>pics<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 数据有了, 可以创建BScroll对象形成滑动</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、Search组件"><a href="#三、Search组件" class="headerlink" title="三、Search组件"></a>三、Search组件</h2><ul><li>根据关键字异步搜索显示匹配的商家列表</li><li>实现如果没有搜索结果的提示显示，v-if，v-else进行判断</li><li>router-link 通过tag属性改变显示的标签</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HeaderTop</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>搜索<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_form<span class="token punctuation">"</span></span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入商家或美食名称<span class="token punctuation">"</span></span>        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_input<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 定义noSearchShops属性，判断搜索结果是否有数据，有数据则显示，没有数据则显示提示 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!noSearchShops<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--:to="'/shop?id='+item.id"--></span>        <span class="token comment" spellcheck="true">&lt;!-- tag属性&lt;a>标签将会成为真实的链接 (并且可以获取到正确的跳转)，但是激活的类将会被应用在外部的&lt;li>标签上。          a标签替换为li标签 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{path:<span class="token punctuation">'</span>/shop<span class="token punctuation">'</span>, query:{id:item.id}}<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in searchShops<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.id<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list_li<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgBaseUrl + item.image_path<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>restaurant_img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item_right_text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>月售 {{item.month_sales||item.recent_order_num}} 单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{item.delivery_fee||item.float_minimum_order_amount}} 元起送 / 距离 {{item.distance}} 公里<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search_none<span class="token punctuation">"</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>很抱歉！无搜索结果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> mapState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vuex"</span><span class="token punctuation">;</span><span class="token keyword">import</span> HeaderTop <span class="token keyword">from</span> <span class="token string">"../../components/HeaderTop/HeaderTop.vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      keyword<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      imgBaseUrl<span class="token punctuation">:</span> <span class="token string">'http://cangdu.org:8001/img/'</span><span class="token punctuation">,</span>      noSearchShops<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'searchShops'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>    searchShops <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//如果没有数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>noSearchShops <span class="token operator">=</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//如果有数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>noSearchShops <span class="token operator">=</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//得到搜索关键字,去除字符串的头尾空格</span>      <span class="token keyword">const</span> keyword <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keyword<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">//进行搜索</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'searchShops'</span><span class="token punctuation">,</span>keyword<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span>    HeaderTop  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、项目优化"><a href="#四、项目优化" class="headerlink" title="四、项目优化"></a>四、项目优化</h2><h4 id="1、缓存路由组件对象"><a href="#1、缓存路由组件对象" class="headerlink" title="1、缓存路由组件对象"></a>1、缓存路由组件对象</h4><ul><li>通过keep-alive标签，缓存商家信息路由组件中的数据</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ShopHeader</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ShopHeader</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 是否使用replace模式实现路由跳转 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/shop/goods<span class="token punctuation">"</span></span> <span class="token attr-name">replace</span><span class="token punctuation">></span></span>点餐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/shop/ratings<span class="token punctuation">"</span></span> <span class="token attr-name">replace</span><span class="token punctuation">></span></span>评价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/shop/info<span class="token punctuation">"</span></span> <span class="token attr-name">replace</span><span class="token punctuation">></span></span>商家<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 缓存路由组件对象 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>keep-alive</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>keep-alive</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、路由组件懒加载"><a href="#2、路由组件懒加载" class="headerlink" title="2、路由组件懒加载"></a>2、路由组件懒加载</h4><ul><li>使用函数的形式调用组件，实现进入组件时才进行加载，没有进入不加载</li><li>返回路由组件的函数, 只有执行此函数才会加载路由组件, 这个函数在请求对应的路由路径时才会执行</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// import Msite from '@/pages/Msite/Msite'</span><span class="token comment" spellcheck="true">// import Order from '@/pages/Order/Order'</span><span class="token comment" spellcheck="true">// import Profile from '@/pages/Profile/Profile'</span><span class="token comment" spellcheck="true">// import Search from '@/pages/Search/Search'</span><span class="token comment" spellcheck="true">/** * 路由组件懒加载 * 拆分路由文件，按需加载需要的js */</span><span class="token keyword">const</span> Msite <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../pages/Msite/Msite.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> Search <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../pages/Search/Search.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> Order <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../pages/Order/Order.vue'</span><span class="token punctuation">)</span><span class="token keyword">const</span> Profile <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'../pages/Profile/Profile.vue'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3、图片懒加载"><a href="#3、图片懒加载" class="headerlink" title="3、图片懒加载"></a>3、图片懒加载</h4><ol><li>第一种：引入vue-lazyload插件</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> loading <span class="token keyword">from</span> <span class="token string">'./common/imgs/loading.gif'</span>  <span class="token comment" spellcheck="true">//引入加载中图片</span><span class="token comment" spellcheck="true">/**引入图片懒加载 */</span><span class="token keyword">import</span> VueLazyload <span class="token keyword">from</span> <span class="token string">'vue-lazyload'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueLazyload<span class="token punctuation">,</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//内部自定义一个指令lazy</span>  loading<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//使用</span><span class="token operator">&lt;</span>img v<span class="token operator">-</span>lazy<span class="token operator">=</span><span class="token string">"img"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>调用vant封装的图片懒加载模块</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> loading <span class="token keyword">from</span> <span class="token string">'./common/imgs/loading.gif'</span>  <span class="token comment" spellcheck="true">//引入加载中图片</span><span class="token comment" spellcheck="true">/**引入vant图片懒加载 */</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Lazyload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vant'</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Lazyload<span class="token punctuation">,</span> <span class="token punctuation">{</span>  loading<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//使用</span><span class="token operator">&lt;</span>img v<span class="token operator">-</span>lazy<span class="token operator">=</span><span class="token string">"img"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="4、分析项目打包并优化"><a href="#4、分析项目打包并优化" class="headerlink" title="4、分析项目打包并优化"></a>4、分析项目打包并优化</h4><ul><li>使用<code>npm run build --report</code>生成可视化页面，查看加载包的大小，对其进行优化</li><li>日期过滤器<ul><li>使用moment插件格式化日期格式，在build之后发现插件使用少，占用内存多，换用date-fns插件对项目进行优化</li></ul></li></ul><p><img src="https://upload-images.jianshu.io/upload_images/13505073-6322ea2083d1b4f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="优化前"><br><img src="https://upload-images.jianshu.io/upload_images/13505073-a95e9b6fabba232f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="优化后"></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment" spellcheck="true">// import moment from 'moment'</span><span class="token keyword">import</span> format <span class="token keyword">from</span> <span class="token string">'date-fns/format'</span><span class="token comment" spellcheck="true">//自定义过滤器,格式化日期格式</span>Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'date-format'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> formatStr<span class="token operator">=</span><span class="token string">'YYYY-MM-DD HH:mm:ss'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>value<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span>    <span class="token comment" spellcheck="true">// return moment(value).format(formatStr)</span>    <span class="token keyword">return</span> <span class="token function">format</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> formatStr<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//使用</span><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"time"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>rating<span class="token punctuation">.</span>rateTime <span class="token operator">|</span> date<span class="token operator">-</span>format<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅谷外卖day04</title>
      <link href="/2019/04/02/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day04/"/>
      <url>/2019/04/02/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day04/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ynzy/vue-project/tree/master/gshop" target="_blank" rel="noopener">项目地址</a></p><h2 id="一、ShopGoods组件"><a href="#一、ShopGoods组件" class="headerlink" title="一、ShopGoods组件"></a>一、ShopGoods组件</h2><h4 id="1、动态展现列表数据"><a href="#1、动态展现列表数据" class="headerlink" title="1、动态展现列表数据"></a>1、动态展现列表数据</h4><ul><li>使用mock.js模拟商品数据，实现列表数据展现<h4 id="2、实现基本列表滑动"><a href="#2、实现基本列表滑动" class="headerlink" title="2、实现基本列表滑动"></a>2、实现基本列表滑动</h4></li><li>使用better-scroll</li></ul><ol><li>功能：<ul><li>实现两个列表滑动</li><li>凸显当前分类</li><li>当滑动右侧列表时，更新当前分类</li><li>点击某个分类项，右侧列表滑动到对应的位置</li></ul></li><li>分析：<ul><li>类名：current类样式标识当前分类</li><li>设计一个计算属性：currentIndex，当分类项到此节点，显示current样式</li><li>根据哪些数据计算？<ul><li>scrollY：右侧活动的Y坐标轴(滑动过程是实时变化的)</li><li>tops： 所有右侧分类li的top组成的数组（列表第一次显示后就不再变化）</li></ul></li></ul></li><li>编码：<ul><li>在滑动过程中，实时收集scrollY</li><li>在列表第一次显示后，收集tops</li><li>实现currentIndex的计算逻辑 </li></ul></li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>goods<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu-wrapper<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menuWrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menusUl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- current --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu-item<span class="token punctuation">"</span></span>            <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(good, index) in goods<span class="token punctuation">"</span></span>            <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>            <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{current: index<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span>currentIndex}<span class="token punctuation">"</span></span>            <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clickMenuItem(index)<span class="token punctuation">"</span></span>          <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text bottom-border-1px<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>good.icon<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>good.icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              {{good.name}}            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foods-wrapper<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foodsWrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foodsUl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food-list-hook<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(good, index) in goods<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{good.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food-item bottom-border-1px<span class="token punctuation">"</span></span>                <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(food, index) in good.foods<span class="token punctuation">"</span></span>                <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>                <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showFood(food)<span class="token punctuation">"</span></span>              <span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>57<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>57<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food.icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{food.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>desc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{food.description}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>extra<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>月售 {{food.sellCount}} 份<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>好评率 {{food.rating}}%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>now<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>￥{{food.price}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>old<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food.oldPrice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>￥{{food.oldPrice}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cartcontrol-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CartControl</span> <span class="token attr-name">:food</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CartControl</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ShopCart</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Food</span> <span class="token attr-name">:food</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Food</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="1-实现列表滑动"><a href="#1-实现列表滑动" class="headerlink" title="(1)实现列表滑动"></a>(1)实现列表滑动</h5><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> BScroll <span class="token keyword">from</span> <span class="token string">"better-scroll"</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">"getShopGoods"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//数据更新后执行</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_initTops</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//TODO: methods里放事件相关的函数，加‘_’是为了与事件函数区分开</span>    <span class="token comment" spellcheck="true">//初始化滚动</span>    <span class="token function">_initScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//列表显示之后创建</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>menuScroll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BScroll</span><span class="token punctuation">(</span><span class="token string">".menu-wrapper"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        click<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>foodsScroll <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BScroll</span><span class="token punctuation">(</span><span class="token string">".foods-wrapper"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>        probeType<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 因为惯性滑动不会触发</span>        click<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 给右侧列表绑定scroll监听</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>foodsScroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log(x, y);</span>        <span class="token comment" spellcheck="true">//绝对值</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scrollY <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 给右侧列表绑定scroll结束的监听</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>foodsScroll<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"scrollEnd"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// console.log("scrollEnd", x, y);</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scrollY <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="2-凸显当前分类，当滑动右侧列表时，更新当前分类"><a href="#2-凸显当前分类，当滑动右侧列表时，更新当前分类" class="headerlink" title="(2)凸显当前分类，当滑动右侧列表时，更新当前分类"></a>(2)凸显当前分类，当滑动右侧列表时，更新当前分类</h5><ul><li>当右侧滑动的每个导航在客户区高度顶部时，左侧的菜单栏同步高亮</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>menu-item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(good, index) in goods<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{current: index<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span>currentIndex}<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>clickMenuItem(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">   <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      scrollY<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 右侧滑动的Y轴坐标 (滑动过程时实时变化)</span>      tops<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 所有右侧分类li的top组成的数组  (列表第一次显示后就不再变化)</span>      food<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 需要显示的food</span>      leftTops<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      leftScrollY<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"goods"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">//计算得到当前分类的下标</span>    <span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 得到条件数据</span>      <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollY<span class="token punctuation">,</span> tops <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 根据条件计算产生一个结果</span>      <span class="token comment" spellcheck="true">//TODO: findIndex: 方法返回传入一个测试条件（函数）符合条件的数组第一个元素位置</span>      <span class="token keyword">const</span> index <span class="token operator">=</span> tops<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// scrollY>=当前top &amp;&amp; scrollY&lt;下一个top</span>        <span class="token keyword">return</span> scrollY <span class="token operator">>=</span> top <span class="token operator">&amp;&amp;</span> scrollY <span class="token operator">&lt;</span> tops<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//计算左侧菜单条滑动位置</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">const</span> leftScrollY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>leftTops<span class="token punctuation">[</span>index <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>leftScrollY <span class="token operator">=</span> leftScrollY<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>menuScroll<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>leftScrollY<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">// 返回结果</span>      <span class="token keyword">return</span> index<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//初始化tops</span>    <span class="token function">_initTops</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//1. 初始化tops</span>      <span class="token keyword">const</span> tops <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      tops<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//2. 收集top值</span>      <span class="token comment" spellcheck="true">//找到所有分类li</span>      <span class="token keyword">const</span> lis <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>foodsUl<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"food-list-hook"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">/**       * 首先 这是创建了一个类数组lis（就是没有具体数据的数组），使用Array.prototype把类数组转换为原型数组，prototype是原型的意思        为什么要转换为原型数组呢？因为类数组是没有slice()方法的，需要把类数组转换为原型数组才能调用slice()这个方法        然后 解释 slice()和call()方法        slice() 方法可从已有的数组中返回选定的元素。 语法 arrayObject.slice(start,end)，在本句中的意思是要去遍历数组        call() 方法定义：调用一个对象的方法，以另一个对象替换当前对象，在这里的意思大概就是调用原型数组的方法，用原型数组代替当前对象（类数组），        所以Array.prototype.slice.call(lis)数组就完全变成真正的数组啦！       */</span>      Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>li <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        top <span class="token operator">+</span><span class="token operator">=</span> li<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//客户区高度</span>        tops<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//3. 更新数据</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>tops <span class="token operator">=</span> tops<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// console.log(tops);</span>      <span class="token comment" spellcheck="true">//初始化左侧滑动高度</span>      <span class="token keyword">const</span> leftTops <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">let</span> leftTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      leftTops<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftTop<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">const</span> leftTopLi <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>menusUl<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">"menu-item"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>leftTopLi<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>li <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        leftTop <span class="token operator">+</span><span class="token operator">=</span> li<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//客户区高度</span>        leftTops<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftTop<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>leftTops <span class="token operator">=</span> leftTops<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// console.log(leftTops);</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="3-点击某个分类项，右侧列表滑动到对应的位置"><a href="#3-点击某个分类项，右侧列表滑动到对应的位置" class="headerlink" title="(3)点击某个分类项，右侧列表滑动到对应的位置"></a>(3)点击某个分类项，右侧列表滑动到对应的位置</h5><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">clickMenuItem</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//使用右侧列表滑动到对应的位置</span>      <span class="token comment" spellcheck="true">// 得到目标位置的scrollY</span>      <span class="token keyword">const</span> scrollY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tops<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 立即更新scrollY(让点击的分类项成为当前分类)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>scrollY <span class="token operator">=</span> scrollY<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 平滑滑动右侧列表</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>foodsScroll<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>scrollY<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、CartControl组件，商品加减组件"><a href="#二、CartControl组件，商品加减组件" class="headerlink" title="二、CartControl组件，商品加减组件"></a>二、CartControl组件，商品加减组件</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cartcontrol<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>move<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- TODO: .stop阻止事件冒泡，点击加减号不再弹出food组件 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont icon-remove1<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food.count<span class="token punctuation">"</span></span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>updateFoodCount(false)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cart-count<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food.count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{food.count}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>iconfont icon-addcontacts<span class="token punctuation">"</span></span> <span class="token attr-name">@click.stop</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>updateFoodCount(true)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    food<span class="token punctuation">:</span> Object  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">updateFoodCount</span><span class="token punctuation">(</span>isAdd<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">"updateFoodCount"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> isAdd<span class="token punctuation">,</span> food<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>food <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// actions</span>  updateFoodCount <span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>isAdd<span class="token punctuation">,</span> food<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>isAdd<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">commit</span><span class="token punctuation">(</span>INCREMENT_FOOD_COUNT<span class="token punctuation">,</span> <span class="token punctuation">{</span>food<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token function">commit</span><span class="token punctuation">(</span>DECREMENT_FOOD_COUNT<span class="token punctuation">,</span> <span class="token punctuation">{</span>food<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">// mutations</span>    <span class="token punctuation">[</span>INCREMENT_FOOD_COUNT<span class="token punctuation">]</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span><span class="token punctuation">{</span>food<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>food<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//第一次增加</span>      <span class="token comment" spellcheck="true">// food.count = 1  // 新增属性(没有数据绑定)</span>      <span class="token comment" spellcheck="true">//TODO: 在已绑定的数据中添加新的数据进行绑定</span>      Vue<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span>food<span class="token punctuation">,</span> <span class="token string">'count'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//让新增的属性也有数据绑定</span>      <span class="token comment" spellcheck="true">// 将food添加到cartFoods中</span>      state<span class="token punctuation">.</span>cartFoods<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>          food<span class="token punctuation">.</span>count<span class="token operator">++</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">/**        * p65       * 1.通过两个引用变量指向同一个对象，通过一个引用变量改变变量内部数据，另外一个引用变量能看见       * 2.两个引用变量指向同一个对象，让一个引用变量指向另外一个对象，而原来的引用变量的另一个引用变量还是指向原来的对象      */</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>问题：更新状态数据, 对应的界面不变化</li></ol><ul><li>原因： 一般方法给一个已有绑定的对象中添加一个新的属性, 这个属性没有数据绑定</li><li>解决:<ul><li>Vue.set(obj, ‘xxx’, value)才有数据绑定</li><li>this.$set(obj, ‘xxx’, value)才有数据绑定<h2 id="三、ShopCart组件，购物车组件"><a href="#三、ShopCart组件，购物车组件" class="headerlink" title="三、ShopCart组件，购物车组件"></a>三、ShopCart组件，购物车组件</h2></li></ul></li></ul><ol><li>使用vuex管理购物项数据: cartFoods</li><li>解决几个功能性bug<ul><li>是什么时候显示和关闭购物车列表</li><li>如何计算需要多少元起送<br><code>`</code>html<template><br><div><br><div class="shopcart"><br><div class="content"><br>  <div class="content-left" @click="toggleShow"><br>    <div class="logo-wrapper"><br>      <!-- 显示总数量 --><br>      <div class="logo" :class="{highlight:totalCount}"><br>        <i class="iconfont icon-shopping" :class="{highlight:totalCount}"></i><br>      </div><br>      <div class="num" v-if="totalCount"></div><br>    </div><br>    <div class="price" :class="{highlight:totalCount}">￥</div><br>    <div class="desc">另需配送费￥ 元</div><br>  </div><br>  <!-- 通过计算属性计算总价格和是否需要的配送费的关系 --><br>  <div class="content-right"><br>    <div class="pay" :class="payClass"></div><br>  </div><br></div><br><div class="shopcart-list" v-show="listShow"><br>  <div class="list-header"><br>    <h1 class="title">购物车</h1><br>    <span class="empty" @click="clearCart">清空</span><br>  </div><br>  <div class="list-content"><br>    <ul><br>      <li class="food" v-for="(food, index) in cartFoods" :key="index"><br>        <span class="name"></span><br>        <div class="price"><br>          <span>￥</span><br>        </div><br>        <div class="cartcontrol-wrapper"><br>          <cartcontrol :food="food"><br>        </cartcontrol></div><br>      </li><br>    </ul><br>  </div><br></div><br></div><br><div class="list-mask" v-show="listShow" @click="toggleShow"></div><br></div><br></template></li></ul></li></ol><script>import { Dialog } from 'vant';import BScroll from "better-scroll";import { mapState, mapGetters } from "vuex";import CartControl from "../CartControl/CartControl.vue";export default {  data() {    return {      isShow: false    };  },  computed: {    ...mapState(["cartFoods", "info"]),    ...mapGetters(["totalCount", "totalPrice"]),    payClass() {      const { totalPrice } = this;      const { minPrice } = this.info;      return totalPrice >= minPrice ? "enough" : "not-enough";    },    payText() {      const { totalPrice } = this;      const { minPrice } = this.info;      if (totalPrice === 0) {        return `￥${minPrice}元起送`;      } else if (totalPrice < minPrice) {        return `还差￥${minPrice - totalPrice}元起送`;      } else {        return "结算";      }    },    //显示购物车列表项    listShow() {      // 如果总数量为0, 直接不显示      if (this.totalCount === 0) {        this.isShow = false;        return false;      }      if (this.isShow) {        this.$nextTick(() => {          // 实现BScroll的实例是一个单例          if (!this.scroll) {            this.scroll = new BScroll(".list-content", {              click: true            });          } else {            this.scroll.refresh(); // 让滚动条刷新一下: 重新统计内容的高度          }        });      }      return this.isShow;    }  },  methods: {    toggleShow() {      // 只有当总数量大于0时切换      if (this.totalCount > 0) {        this.isShow = !this.isShow;      }    },    clearCart() {      Dialog.confirm({        title: "提示",        message: "确定清空购物车？"      })        .then(() => {          this.$store.dispatch('clearCart')        })        .catch(() => {          // on cancel        });    }  },  components: {    CartControl  }};</script>```## 四、Food组件，食物详情组件1. 父子组件：   * 子组件调用父组件的方法: 通过props将方法传递给子组件   * 父组件调用子组件的方法: 通过ref找到子组件标签对象```html<template>  <div class="food" v-if="isShow">    <div class="food-content">      <div class="image-header">        <img :src="food.image">        <p class="foodpanel-desc"></p>        <div class="back" @click="toggleShow">          <i class="iconfont icon-xiazai6" style="color:#fff"></i>        </div>      </div>      <div class="content">        <h1 class="title"></h1>        <div class="detail">          <span class="sell-count">月售  份</span>          <span class="rating">好评率 %</span>        </div>        <div class="price">          <span class="now">￥</span>          <span class="old" v-show="food.oldPrice">￥</span>        </div>        <div class="cartcontrol-wrapper">            <cartcontrol :food="food"></cartcontrol>        </div>      </div>    </div>    <div class="food-cover" @click="toggleShow"></div>  </div></template><script>  import CartControl from '../../components/CartControl/CartControl.vue'export default {  props: {    food: Object  },  data () {    return {      isShow: false    }  },  computed: {},  methods: {    toggleShow () {      this.isShow = !this.isShow    }  },  components: {    CartControl  }};</script><!-- 调用组件 --><p> <food :food="food" ref="food"></food><br> <script><br> //显示点击的food<br>    showFood(food) {<br>      //设置food<br>      this.food = food;<br>      //显示food组件(在父组件中调用子组件对象的方法)<br>      console.log(this.$refs.food);<br>      this.$refs.food.toggleShow();<br>    }<br> </script><br><code>`</code></p>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅谷外卖day03</title>
      <link href="/2019/03/25/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day03/"/>
      <url>/2019/03/25/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day03/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ynzy/vue-project/tree/master/gshop" target="_blank" rel="noopener">项目地址</a></p><h2 id="一、完成登录注册功能"><a href="#一、完成登录注册功能" class="headerlink" title="一、完成登录注册功能"></a>一、完成登录注册功能</h2><ol><li>2种登录方式<ul><li>手机号/验证码登录</li><li>用户名/密码/图片验证码登录</li></ul></li><li>登录的基本流程<ul><li>表单前台验证，如果不通过，提示</li><li>发送ajax请求，得到返回的结果</li></ul></li><li><p>根据结果的标识(code)来判断登录请求是否成功</p><ul><li>1： 不成功，显示提示</li><li>0： 成功，保存用户信息，跳转到个人中心路由<br><code>`</code>js<br>async login() {<br>let result<br>//前台表单验证<br>if (this.loginWay) {<br>// 发送ajax请求，短信登录<br>result = await reqSmsLogin(phone,code)</li></ul><p>} else {<br>// 发送ajax请求，密码登录<br>result = await reqPwdLogin({name,pwd,captcha})<br>}<br>//根据结果数据处理<br>if(result.code === 0) {<br>  const user = result.data<br>  //将user保存到vuex的state中<br>  this.$store.dispatch(‘recordUser’,user)<br>  //去个人中心界面<br>  this.$router.replace(‘/profile’)<br>} else {<br>  //显示新的图形验证码<br>  this.getCaptcha()<br>  //显示警告提示<br>  const msg = result.msg<br>  this.showAlert(msg)<br>}<br>}</p></li></ol><p>//action.js<br>  // TODO: 同步记录用户信息<br>  recordUser ({commit},userInfo) {<br>    commit(RECEIVE_USER_INFO,{userInfo})<br>  }<br>//mutations.js<br>  <a href="state,{userInfo}">RECEIVE_USER_INFO</a> {<br>      state.userInfo = userInfo<br>  },</p><pre><code>4. vue自定义事件   * 监听事件： @eventName=&quot;fn&quot;  function fn (data) {//处理}   * 分发事件： this.$emit(&#39;eventName&#39;,data)```html&lt;!-- AlertTip提示组件 --&gt;&lt;template&gt;  &lt;div class=&quot;alert_container&quot;&gt;    &lt;section class=&quot;tip_text_container&quot;&gt;      &lt;div class=&quot;tip_icon&quot;&gt;        &lt;span&gt;&lt;/span&gt;        &lt;span&gt;&lt;/span&gt;      &lt;/div&gt;      &lt;p class=&quot;tip_text&quot;&gt;{{alertText}}&lt;/p&gt;      &lt;div class=&quot;confrim&quot; @click=&quot;closeTip&quot;&gt;确认&lt;/div&gt;    &lt;/section&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;  export default {    props: {      alertText: String    },    methods: {      closeTip() {        // 分发自定义事件(事件名: closeTip)        this.$emit(&#39;closeTip&#39;)      }    }  }&lt;/script&gt;&lt;!-- login组件调用AlertTip组件 --&gt;&lt;AlertTip :alertText=&quot;alertText&quot; v-show=&quot;alertShow&quot; @closeTip=&quot;closeTip&quot;/&gt;&lt;script&gt;  import AlertTip from &quot;../../components/AlertTip/AlertTip.vue&quot;;  export default {    methods: {      //关闭警告框      closeTip() {        this.alertShow = false;        this.alertText = &#39;&#39;;      },    }  }&lt;/script&gt;</code></pre><ol start="4"><li>注意<ul><li>使用network查看请求(路径/参数/请求方式/响应数据)</li><li>使用vue的chrome插件查看vuex中的state和组件中的数据</li><li>使用debugger语句调试代码</li><li>实参类型与形参类型的匹配问题</li></ul></li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//定义 </span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//{a,b,c}是一个对象</span><span class="token comment" spellcheck="true">//调用</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//也要传对象</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、自动登录，退出登录"><a href="#2、自动登录，退出登录" class="headerlink" title="2、自动登录，退出登录"></a>2、自动登录，退出登录</h2><ol><li>通过会话获取后台用户信息，后台处理session保持登录状态，刷新页面时登录存在</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 根据会话获取用户信息</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqUserInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL <span class="token operator">+</span> <span class="token string">'/userinfo'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 异步获取用户信息</span>  <span class="token keyword">async</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">const</span> userInfo <span class="token operator">=</span> result<span class="token punctuation">.</span>data      <span class="token function">commit</span><span class="token punctuation">(</span>RECEIVE_USER_INFO<span class="token punctuation">,</span><span class="token punctuation">{</span>userInfo<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>点击退出登录，返回退出登录状态给后台，删除前台用户信息</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   Dialog<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>     title<span class="token punctuation">:</span> <span class="token string">"提示"</span><span class="token punctuation">,</span>     message<span class="token punctuation">:</span> <span class="token string">"确认退出吗"</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//请求退出</span>     <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">"logout"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">Toast</span><span class="token punctuation">(</span><span class="token string">'退出成功'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"点击了取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//actions</span>  <span class="token comment" spellcheck="true">// 异步登出</span>  <span class="token keyword">async</span> logout <span class="token punctuation">(</span><span class="token punctuation">{</span>commit<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">commit</span><span class="token punctuation">(</span>RESET_USER_INFO<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、搭建商家整体界面"><a href="#3、搭建商家整体界面" class="headerlink" title="3、搭建商家整体界面"></a>3、搭建商家整体界面</h2><ol><li>学会拆分界面路由，看出页面拆分成几个组件<br><img src="https://upload-images.jianshu.io/upload_images/13505073-5594f277ebd5c5d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="页面组件和路由拆分"></li><li>路由的定义/配置|使用—父子路由，路由重定向</li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">{</span>   path<span class="token punctuation">:</span> <span class="token string">'/shop'</span><span class="token punctuation">,</span>   component<span class="token punctuation">:</span> Shop<span class="token punctuation">,</span>   children<span class="token punctuation">:</span> <span class="token punctuation">[</span>     <span class="token punctuation">{</span>       path<span class="token punctuation">:</span> <span class="token string">'/shop/goods'</span><span class="token punctuation">,</span>       component<span class="token punctuation">:</span> ShopGoods     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>       path<span class="token punctuation">:</span> <span class="token string">'/shop/ratings'</span><span class="token punctuation">,</span>       component<span class="token punctuation">:</span> ShopRatings     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>       path<span class="token punctuation">:</span> <span class="token string">'/shop/info'</span><span class="token punctuation">,</span>       component<span class="token punctuation">:</span> ShopInfo     <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token punctuation">{</span>       path<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>       redirect<span class="token punctuation">:</span> <span class="token string">'/shop/goods'</span>     <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、模拟-mock-数据-接口"><a href="#4、模拟-mock-数据-接口" class="headerlink" title="4、模拟(mock)数据/接口"></a>4、模拟(mock)数据/接口</h2><ol><li>前后台分离的理解</li><li>mock.js的理解和使用</li><li>json数据设计的理解<ul><li>JSON分为json对象和json数组，</li><li>结构：名称/数据类型</li><li>结构 + value值，值可以变，结构不可以变 </li></ul></li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//接口</span><span class="token comment" spellcheck="true">//获取商家信息</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/info'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//mock模拟数据不需要代理api</span><span class="token comment" spellcheck="true">//获取商家评价数组</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopRatings <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/ratings'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取商家商品数组</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopGoods <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/goods'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*mockServer.js*/</span><span class="token comment" spellcheck="true">/*使用mockjs提供mock数据接口 */</span> <span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">'mockjs'</span> <span class="token keyword">import</span> data <span class="token keyword">from</span> <span class="token string">'./data.json'</span><span class="token comment" spellcheck="true">// 返回goods的接口</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'/goods'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>goods<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 返回ratings的接口</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'/ratings'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>ratings<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 返回info的接口</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'/info'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> data<span class="token punctuation">.</span>info<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// export default ???  不需要向外暴露任何数据, 只需要保存能执行即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5、ShopHeader组件"><a href="#5、ShopHeader组件" class="headerlink" title="5、ShopHeader组件"></a>5、ShopHeader组件</h2><ol><li>异步显示数据效果的编码流程<ul><li>ajax<ul><li>ajax请求函数</li><li>接口请求函数</li></ul></li><li>vuex<ul><li>state</li><li>mutation-types</li><li>actions</li><li>mutations</li></ul></li><li>组件<ul><li>dispatch(): 异步获取后台数据到vuex的state</li><li>mapState(): 从vuex的state中读取对应的数据</li><li>模板中显示</li></ul></li></ul></li><li><p>初始化显示异常</p><ul><li>情况1：<code>Cannot read property &#39;xxx&#39; of undefined&quot;</code></li><li>原因： 初始值是空对象, 内部没有数据, 而模块中直接显示3层表达式</li><li><code>a.b.xxx</code>,undefined表示b未定义</li><li>解决： 使用v-if指令</li></ul><pre class="line-numbers language-html"><code class="language-html"> <span class="token comment" spellcheck="true">&lt;!-- 使用v-if判断info是否加载了数据，控制是否显示，三级表达式会出现报错 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shop-header-discounts<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info.supports<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggleSupportShow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>discounts-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>supportClasses[info.supports[0].type]<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mini-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{info.supports[0].name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activity-content ellipsis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{info.supports[0].content}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>discounts-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{info.supports.length}} 个优惠<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>情况2: <code>Cannot read property &#39;xxx&#39; of null&quot;</code></li><li>原因： 数据定义时使用了<code>a=null</code></li><li>解决： 直接使用<code>a=[]或a={}</code>定义空对象空数组</li></ul></li><li>vue transition动画</li></ol>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅谷外卖day02</title>
      <link href="/2019/03/17/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day02/"/>
      <url>/2019/03/17/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day02/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/ynzy/vue-project/tree/master/gshop" target="_blank" rel="noopener">项目地址</a></p><h2 id="一、异步数据"><a href="#一、异步数据" class="headerlink" title="一、异步数据"></a>一、异步数据</h2><h4 id="1、封装ajax：（第一天已写，这个很重要）"><a href="#1、封装ajax：（第一天已写，这个很重要）" class="headerlink" title="1、封装ajax：（第一天已写，这个很重要）"></a>1、封装ajax：（第一天已写，这个很重要）</h4><ul><li>要学会promise+axios封装ajax请求的函数</li><li>要能封装每个接口对应的请求函数(根据接口定义ajax请求函数)</li><li>解决ajax的跨域问题：配置代理，对代理的理解。</li><li>配置–config–index.js</li></ul><pre class="line-numbers language-js"><code class="language-js">proxyTable<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token string">'/api'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 匹配所有以 '/api'开头的请求路径</span>    target<span class="token punctuation">:</span> <span class="token string">'http://localhost:3000'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 代理目标的基础路径</span>    changeOrigin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 支持跨域</span>    pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 重写路径: 去掉路径中开头的'/api'</span>      <span class="token string">'^/api'</span><span class="token punctuation">:</span> <span class="token string">''</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2、vuex编码"><a href="#2、vuex编码" class="headerlink" title="2、vuex编码:"></a>2、vuex编码:</h4><ol><li>创建所有相关的模块: store/index|state|mutations|actions|getters|mutations-types</li><li>设计state：也就是从后台获取的数据存储在state中<ul><li>出现问题：对于暴露导入的理解</li></ul></li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> state<span class="token keyword">import</span> state <span class="token keyword">from</span> <span class="token string">'./xxx.js'</span><span class="token comment" spellcheck="true">//暴露时没有加{},在import时也不需要加{}</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>state<span class="token punctuation">}</span><span class="token comment" spellcheck="true">//export default {} 导出的是对象，那么引入的时候就要 import {state} from './xxx.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>实现actions，此文件是用来异步获取数据的<ul><li>定义异步action： async/await</li><li>流程： 发送ajax获取数据，commit提交给mutation</li></ul></li><li>实现mutation：给状态赋值，也就是更新state数据</li><li>实现index:创建store对象(固定的模式)</li><li>main.js: 配置store<h4 id="3、组件异步显示数据"><a href="#3、组件异步显示数据" class="headerlink" title="3、组件异步显示数据"></a>3、组件异步显示数据</h4><ol><li>异步获取数据</li></ol><ul><li>在mounted()通过$store.dispatch(‘actionName’)来异步获取后台数据到state中</li><li>mapActions([‘getAddress’])以数组形式映射模块中的方法，在mounted中调用也可以异步获取后台数据</li></ul></li></ol><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> mapActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"vuex"</span><span class="token punctuation">;</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//TODO: 方法2.以数组形式映射模块中的方法</span> <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'getAddress'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>mounted <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//TODO: 方法1.含有异步操作，例如向后台提交数据</span> <span class="token comment" spellcheck="true">// this.$store.dispatch('getAddress')</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>读取数据<ul><li>mapState([‘…’])读取state中数据到组件中</li></ul></li><li>显示数据<ul><li>在模板中显示xxx数据<h4 id="4、模板中显示数据的来源"><a href="#4、模板中显示数据的来源" class="headerlink" title="4、模板中显示数据的来源"></a>4、模板中显示数据的来源</h4></li></ul></li><li>data：自身的数据(内部改变)</li><li>props:外部传入的数据(外部改变)</li><li>computed： 根据data/props/别的compute/state/getters(计算的数据)<h4 id="5、异步显示轮播图"><a href="#5、异步显示轮播图" class="headerlink" title="5、异步显示轮播图"></a>5、异步显示轮播图</h4></li><li>通过vuex获取foodCategorys数据(发请求，读取)</li><li>对获取的数据进行整合计算(一维变特定的二维数据)</li></ol><pre class="line-numbers language-js"><code class="language-js">  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"categorys"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">/*      根据categorys一维数组生成一个2维数组      小数组中的元素个数最大是8       */</span>    <span class="token function">categorysArr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//解构赋值</span>      <span class="token keyword">const</span> <span class="token punctuation">{</span> categorys <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 准备空的2维数组</span>      <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 准备一个小数组(最大长度为8)</span>      <span class="token keyword">let</span> minArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      categorys<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>c <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 如果当前小数组已经满了, 创建一个新的</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>minArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          minArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 如果minArr是空的, 将小数组保存到大数组中</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>minArr<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>minArr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 将当前分类保存到小数组中</span>        minArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> arr<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>通过双循环对二维数组进行遍历显示,如果没有数据时，显示预加载图片</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msite_nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 判断是否有数据 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>categorys.length<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!-- 第一层遍历二维数组 --></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(categorys, index) in categorysArr<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>       <span class="token comment" spellcheck="true">&lt;!-- 第二层遍历，对二维数组中的一维数组遍历 --></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>link_to_food<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(category, index) in categorys<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>food_container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baseImageUrl+category.image_url<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{category.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token comment" spellcheck="true">&lt;!-- Add Pagination --></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 没有数据时显示预加载svg --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./images/msite_back.svg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>back<span class="token punctuation">"</span></span> <span class="token attr-name">v-else</span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>使用Swiper显示轮播图，如何在界面更新之后创建Swiper对象？<ul><li>使用watch+$nextTick(),监视显示的数据，如果数据有值立即更新</li></ul></li></ol><pre class="line-numbers language-js"><code class="language-js">  watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">categorys</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// categorys数组中有数据了, 在异步更新界面之前执行</span>      <span class="token comment" spellcheck="true">// 使用setTimeout可以实现效果, 但不是太好</span>      <span class="token comment" spellcheck="true">/*setTimeout(() => {       //创建一个Swiper实例对象，实现轮播        new Swiper(".swiper-container", {          loop: true, // 循环模式选项,可以循环轮播          // 如果需要分页器          pagination: {            el: ".swiper-pagination"          }        });      }, 100);*/</span>       <span class="token comment" spellcheck="true">// 界面更新就立即创建Swiper对象</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// TODO: 一旦完成界面更新, 立即调用(此条语句要写在数据更新之后)</span>          <span class="token comment" spellcheck="true">// 创建一个Swiper实例对象, 来实现轮播</span>          <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token string">'.swiper-container'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            loop<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 可以循环轮播</span>            <span class="token comment" spellcheck="true">// 如果需要分页器</span>            pagination<span class="token punctuation">:</span> <span class="token punctuation">{</span>              el<span class="token punctuation">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、登录-注册：界面相关效果"><a href="#二、登录-注册：界面相关效果" class="headerlink" title="二、登录/注册：界面相关效果"></a>二、登录/注册：界面相关效果</h2><ol><li>切换登录方式</li></ol><ul><li>初始化一个boolean值(longinWay)，true为短信登录，false为密码登录</li><li>使用@click方法设置boolean值</li><li>定义一个class类绑定此布尔值控制表单显示选择<br><code>loginWay: true  //true代表短信登陆, false代表密码</code><br><img src="https://upload-images.jianshu.io/upload_images/13505073-07a17e145f6da30b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="登录方式切换.png"><br><img src="https://upload-images.jianshu.io/upload_images/13505073-78b784c1c53b2722.gif?imageMogr2/auto-orient/strip" alt="登录方式切换.gif"></li></ul><ol start="2"><li>手机号合法检查，发送验证码倒计时</li></ol><ul><li>通过计算属性验证输入的手机号是否正确，正确时可以点击发送获取验证码,<code>right_phone</code>类改变字的颜色</li></ul><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login_message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tel<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>手机号<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>phone<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 计算属性验证输入的手机号是否正确，正确则能点击获取验证码，添加显示状态。 --></span>  <span class="token comment" spellcheck="true">&lt;!-- 表单里面的button默认行为是提交表单，要取消默认行为 --></span>  <span class="token comment" spellcheck="true">&lt;!-- 三目运算，模板字符串，如果时间大于0则显示当前秒数 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span>    <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!rightPhone<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>get_verification<span class="token punctuation">"</span></span>    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{right_phone: rightPhone}<span class="token punctuation">"</span></span>    <span class="token attr-name">@click.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>getCode<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>{{computeTime>0? `已发送(${computeTime}s)` :'获取验证码'}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    phone<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 手机号</span>    computeTime<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//计时时间</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">rightPhone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//使用计算属性测试输入的手机号是否正确，正确则显示类名</span>      <span class="token keyword">return</span> <span class="token regex">/^1\d{10}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>phone<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//异步获取验证码</span>  <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//如果当时没有计时</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>computeTime<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//启动倒计时</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>computeTime <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//TODO: 间歇调用</span>      <span class="token keyword">const</span> intervalId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>computeTime<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>computeTime <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token function">clearInterval</span><span class="token punctuation">(</span>intervalId<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13505073-01bd15d53c5cefce.gif?imageMogr2/auto-orient/strip" alt="手机号码检车，发送验证码倒计时.gif"></p><ol start="3"><li>切换显示或隐藏密码</li></ol><ul><li>通过两个输入框，一个按钮，改变密码的显示与隐藏状态</li></ul><p><code>showPwd: false, //是否显示密码</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login_verification<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 切换密码显示隐藏状态，改变按钮选择状态，默认为隐藏 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showPwd<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>密码<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>!showPwd<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 点击改变类的状态和圆圈的移动 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switch_button<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showPwd?<span class="token punctuation">'</span>on<span class="token punctuation">'</span>: <span class="token punctuation">'</span>off<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showPwd <span class="token punctuation">=</span> !showPwd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switch_circle<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{right:showPwd}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switch_text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{showPwd?'abc':'...'}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13505073-0c36bbad3e5565b9.gif?imageMogr2/auto-orient/strip" alt="密码显示和隐藏.gif"></p><ol start="4"><li>前台验证提示</li></ol><ul><li>学会如何使用模板组件</li><li>调用–components-AlertTip-AlertTip.vue组件，使用提示框组件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 提示模板组件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert_container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tip_text_container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tip_icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tip_text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{alertText}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>confrim<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>closeTip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>确认<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>      alertText<span class="token punctuation">:</span> String  <span class="token comment" spellcheck="true">//传入的参数</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">closeTip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 分发自定义事件(事件名: closeTip)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'closeTip'</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">@submit.prevent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 调用组件，@closeTip自定义事件 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AlertTip</span> <span class="token attr-name">:alertText</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alertText<span class="token punctuation">"</span></span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alertShow<span class="token punctuation">"</span></span> <span class="token attr-name">@closeTip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>closeTip<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> AlertTip <span class="token keyword">from</span> <span class="token string">"../../components/AlertTip/AlertTip.vue"</span><span class="token punctuation">;</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>      alertText<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//提示文本</span>      alertShow<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//是否显示警告框</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//展示提示框</span>  <span class="token function">showAlert</span><span class="token punctuation">(</span>alertText<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>alertShow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>alertText <span class="token operator">=</span> alertText<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//关闭警告框</span>  <span class="token function">closeTip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>alertShow <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>alertText <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//异步登录</span>  <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//前台表单验证</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>loginWay<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//短信登录</span>      <span class="token keyword">const</span> <span class="token punctuation">{</span> phone<span class="token punctuation">,</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>rightPhone<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//手机号不正确</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"手机号不正确"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/^\d{6}$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>code<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//验证码必须是6位数字</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"验证码必须是6位数字"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//密码登录</span>      <span class="token keyword">const</span> <span class="token punctuation">{</span> name<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> captcha <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//用户名必须指定</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"用户名必须指定"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//密码必须指定</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"密码必须指定"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>captcha<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//图形验证码必须指定</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showAlert</span><span class="token punctuation">(</span><span class="token string">"图形验证码必须指定"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、前后台交互相关问题"><a href="#三、前后台交互相关问题" class="headerlink" title="三、前后台交互相关问题"></a>三、前后台交互相关问题</h2><ol><li>如何查看你的应用是否发送某个ajax请求？<ul><li>浏览器的network<br><img src="https://upload-images.jianshu.io/upload_images/13505073-f8431b542cc6969e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="查看network"></li></ul></li><li>发ajax请求404怎么办<ul><li>查看请求路径的对错</li><li>单利是否生效(配置和重启)</li><li>服务器应用是否运行</li></ul></li><li>后台返回了数据，但页面没有显示？<ul><li>vuex中是否有数据</li><li>组件是否读取了数据</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硅谷外卖day01</title>
      <link href="/2019/03/14/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day01/"/>
      <url>/2019/03/14/%E7%A1%85%E8%B0%B7%E5%A4%96%E5%8D%96day01/</url>
      
        <content type="html"><![CDATA[<p>#硅谷外卖项目介绍</p><p>前后端分离的SPA应用，前台采用vue全家桶制作webapp，后台使用nodejs,mongoDB开发，后台是直接拿过来用的，我是做前端的，所以只学习前端这一块</p><p><a href="https://github.com/ynzy/vue-project/tree/master/gshop" target="_blank" rel="noopener">项目地址</a></p><h3 id="前台技术选型"><a href="#前台技术选型" class="headerlink" title="前台技术选型"></a>前台技术选型</h3><pre><code>vue,vue-router,axiosvant,swiper,mint-uistylus</code></pre><h1 id="day01"><a href="#day01" class="headerlink" title="day01"></a>day01</h1><h2 id="1、搭建项目结构"><a href="#1、搭建项目结构" class="headerlink" title="1、搭建项目结构"></a>1、搭建项目结构</h2><ol><li>静态资源导入<ol><li>–static–css–reset.css，在index.html页面引入即可</li><li>引入阿里图标库，在阿里图标库设计好自己需要用到的图标，生成在线代码直接在index.html引入</li><li>解决点击响应延时 0.3s 问题</li></ol></li></ol><pre><code>  &lt;link rel=&quot;stylesheet&quot; href=&quot;/static//css/reset.css&quot;&gt;  &lt;!-- 引入阿里图标库 --&gt;  &lt;link rel=&quot;stylesheet&quot; href=&quot;http://at.alicdn.com/t/font_1077199_3kjjxyuafdw.css&quot;&gt;  &lt;!-- TODO: 解决点击响应延时 0.3s 问题 --&gt;  &lt;script src=&quot;https://as.alipayobjects.com/g/component/fastclick/1.0.6/fastclick.js&quot;&gt;&lt;/script&gt;  &lt;script&gt;    if (&#39;addEventListener&#39; in document) {      document.addEventListener(&#39;DOMContentLoaded&#39;, function() {        FastClick.attach(document.body);      }, false);    }    if(!window.Promise) {      document.writeln(&#39;&lt;script src=&quot;https://as.alipayobjects.com/g/component/es6-promise/3.2.2/es6-promise.min.js&quot;&#39;+&#39;&gt;&#39;+&#39;&lt;&#39;+&#39;/&#39;+&#39;script&gt;&#39;);    }  &lt;/script&gt;</code></pre><h2 id="2、vue-router的理解和使用"><a href="#2、vue-router的理解和使用" class="headerlink" title="2、vue-router的理解和使用"></a>2、vue-router的理解和使用</h2><ul><li>router-view/router-link/keep-alive</li><li>$router: 路由对象，包含一些操作路由的功能函数，来实现编程式导航(路由跳转)</li><li>$route： 当前路由对象，一些当前路由信息数据容器，path/meta/query/params<ol><li>路由拆分</li></ol></li><li>拆分路由，当拿到ui图或者静态页面时，要对路由进行布局拆分，知晓，每个页面跳转到哪里，会显示什么</li><li>底部导航组件：FooterGuide</li><li>此导航路由组件： Msite/Search/Order/Profile<ul><li>路由结构：</li></ul></li></ul><pre class="line-numbers language-js"><code class="language-js"> routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      redirect<span class="token punctuation">:</span> <span class="token string">'/msite'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/msite'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'msite'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Msite<span class="token punctuation">,</span>      meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//配置元数据确定是否显示footer</span>        showFooter<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/order'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'order'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Order<span class="token punctuation">,</span>      meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>        showFooter<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/profile'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'profile'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Profile<span class="token punctuation">,</span>      meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>        showFooter<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Search<span class="token punctuation">,</span>      meta<span class="token punctuation">:</span> <span class="token punctuation">{</span>        showFooter<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'login'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Login    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>van<span class="token operator">-</span>tabbar v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"active"</span> active<span class="token operator">-</span>color<span class="token operator">=</span><span class="token string">"#07c160"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item to<span class="token operator">=</span><span class="token string">"/msite"</span> icon<span class="token operator">=</span><span class="token string">"shop"</span><span class="token operator">></span>外卖<span class="token operator">&lt;</span><span class="token operator">/</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item to<span class="token operator">=</span><span class="token string">"/search"</span> icon<span class="token operator">=</span><span class="token string">"search"</span><span class="token operator">></span>搜索<span class="token operator">&lt;</span><span class="token operator">/</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item to<span class="token operator">=</span><span class="token string">"/order"</span> icon<span class="token operator">=</span><span class="token string">"column"</span><span class="token operator">></span>订单<span class="token operator">&lt;</span><span class="token operator">/</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item<span class="token operator">></span>      <span class="token operator">&lt;</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item to<span class="token operator">=</span><span class="token string">"/profile"</span> icon<span class="token operator">=</span><span class="token string">"manager"</span><span class="token operator">></span>我的<span class="token operator">&lt;</span><span class="token operator">/</span>van<span class="token operator">-</span>tabbar<span class="token operator">-</span>item<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>van<span class="token operator">-</span>tabbar<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      active<span class="token punctuation">:</span> <span class="token number">0</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//TODO: 监听路由路径，修改相对应的底部的菜单项</span>    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">==</span> <span class="token string">"/msite"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">==</span> <span class="token string">"/search"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">==</span> <span class="token string">"/order"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>path <span class="token operator">==</span> <span class="token string">"/profile"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style lang<span class="token operator">=</span><span class="token string">'stylus'</span> rel<span class="token operator">=</span><span class="token string">'stylesheet/stylus'</span> scoped<span class="token operator">></span>@<span class="token keyword">import</span> <span class="token string">'../../common/stylus/mixins.styl'</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>使用vant的Tabbar组件实现底部导航，由于点击跳转页面，再次刷新页面时，路由页面与底部导航激活的部分不匹配，所以在每次加载页面时，监听当前路由，使底部激活部分与之匹配</li></ul><ol start="2"><li>抽取组件<br>有些组件在很多页面都是一样的，只是显示的数据不一样，所有将其抽取出来放在–components公共组件中，通过solt插槽来实现组件通信标签结构，props获取父组件数据，实现多页面公用一个组件</li></ol><ul><li>头部组件: HeaderTop, 通过slot来实现组件通信标签结构</li><li>商家列表组件: ShopList</li><li>示例</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//HeaderTop公共组件</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>header <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用插槽获取内容 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">></span>     <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header_title"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header_title_text ellipsis"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>header<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  props<span class="token punctuation">:</span> <span class="token punctuation">{</span>    title<span class="token punctuation">:</span> String  <span class="token comment" spellcheck="true">//从父组件获取标题信息</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">//Msite父组件</span><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>section <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"msite"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>首页头部<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>HeaderTop title<span class="token operator">=</span><span class="token string">"昌平区北七家宏福科技园(337省道北)"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header_search"</span> slot<span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"iconfont icon-sousuo"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header_login"</span> slot<span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"header_login_text"</span><span class="token operator">></span>登录<span class="token operator">|</span>注册<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>HeaderTop<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>section<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> HeaderTop <span class="token keyword">from</span> <span class="token string">"../../components/HeaderTop/HeaderTop.vue"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> components<span class="token punctuation">:</span> <span class="token punctuation">{</span>    HeaderTop<span class="token punctuation">,</span>    ShopList  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>登录路由组件<br>只有路由导航的四个页面需要显示底部菜单，登录组件是不需要显示底部导航的，所以，通过路由的meta属性，配置点击的路由组件显示为true</li></ol><ul><li>在app页面进行设置</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>router<span class="token operator">-</span>view<span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> TODO<span class="token punctuation">:</span> 底部菜单组件是否要显示 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>FooterGuide v<span class="token operator">-</span>show<span class="token operator">=</span><span class="token string">"$route.meta.showFooter"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>FooterGuide<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-后台项目"><a href="#6-后台项目" class="headerlink" title="6. 后台项目"></a>6. 后台项目</h2><pre><code>启动后台项目: 理解前后台分离测试后台接口: 使用postman修正接口文档</code></pre><h2 id="7、前后台交互"><a href="#7、前后台交互" class="headerlink" title="7、前后台交互"></a>7、前后台交互</h2><ul><li>ajax请求：axios</li><li>ajax请求封装： axios + promise</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">/** * ajax请求函数模块 * 返回值： promise对象(异步返回的数据是: response.data) */</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment" spellcheck="true">/** * @export * @param {*} url   //请求地址 * @param {*} [data={}]  //请求数据对象 * @param {string} [type='GET']  //请求方法 */</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 执行异步ajax请求</span>    <span class="token keyword">let</span> promise    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">'GET'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 准备url query参数数据</span>      <span class="token keyword">let</span> dataStr <span class="token operator">=</span> <span class="token string">''</span> <span class="token comment" spellcheck="true">//数据拼接字符串</span>      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        dataStr <span class="token operator">+</span><span class="token operator">=</span> key <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'&amp;'</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>dataStr <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        dataStr <span class="token operator">=</span> dataStr<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> dataStr<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'&amp;'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        url <span class="token operator">=</span> url <span class="token operator">+</span> <span class="token string">'?'</span> <span class="token operator">+</span> dataStr      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">// 发送get请求</span>      promise <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 发送post请求</span>      promise <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 成功了调用resolve()</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//失败了调用reject()</span>      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>接口请求函数封装: 每个后台接口</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">/** * 包含n个接口请求函数的模块 * 函数的返回值: promise对象 */</span><span class="token keyword">import</span> ajax <span class="token keyword">from</span> <span class="token string">'./ajax'</span><span class="token keyword">const</span> BASE_URL <span class="token operator">=</span> <span class="token string">'http://localhost:4000'</span><span class="token comment" spellcheck="true">// const BASE_URL = '/api'</span><span class="token comment" spellcheck="true">// 1、根据经纬度获取位置详情</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqAddress <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>geohash<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>BASE_URL<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/position/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>geohash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 2、获取食品分类列表</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqFoodCategorys <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL<span class="token operator">+</span><span class="token string">'/index_category'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 3、根据经纬度获取商铺列表</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShops <span class="token operator">=</span> <span class="token punctuation">(</span>latitude<span class="token punctuation">,</span>longitude<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL<span class="token operator">+</span><span class="token string">'/shops'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 4、根据经纬度和关键字搜索商铺列表</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqSearchShop <span class="token operator">=</span> <span class="token punctuation">(</span>geohash<span class="token punctuation">,</span>keyword<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL<span class="token operator">+</span><span class="token string">'/shops'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>geohash<span class="token punctuation">,</span> keyword<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 5、获取一次性验证码</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqCaptcha <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL<span class="token operator">+</span><span class="token string">'/captcha'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 6、用户名密码登陆</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqPwdLogin <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span>pwd<span class="token punctuation">,</span>captcha<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL<span class="token operator">+</span><span class="token string">'/login_pwd'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token punctuation">,</span>pwd<span class="token punctuation">,</span>captcha<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 7、发送短信验证码</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqSendCode <span class="token operator">=</span> <span class="token punctuation">(</span>phone<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL <span class="token operator">+</span> <span class="token string">'/sendcode'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>phone<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 8、手机号验证码登陆</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqSmsLogin <span class="token operator">=</span> <span class="token punctuation">(</span>phone<span class="token punctuation">,</span>code<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL <span class="token operator">+</span> <span class="token string">'/login_sms'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>phone<span class="token punctuation">,</span>code<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 9、根据会话获取用户信息</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqUserInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL <span class="token operator">+</span> <span class="token string">'/userinfo'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 10、用户登出</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqLogout <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span>BASE_URL <span class="token operator">+</span> <span class="token string">'/logout'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** * 获取商家信息 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopInfo <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/info'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** * 获取商家评价数组 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopRatings <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/ratings'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** * 获取商家商品数组 */</span><span class="token keyword">export</span> <span class="token keyword">const</span> reqShopGoods <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'/goods'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>调用</li></ul><pre class="line-numbers language-js"><code class="language-js">mounted <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token keyword">const</span> result <span class="token operator">=</span>  <span class="token function">reqFoodCategorys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//  console.log(result)</span>  result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>easy-mock本地部署过程</title>
      <link href="/2019/03/13/easy-mock%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/"/>
      <url>/2019/03/13/easy-mock%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><p> easy-mock 是常用的mock数据网站， 但是随着用户越来越多，easy-mock的接口响应速度有点时候会很慢(也跟本地网络环境有关)，而且接口也不稳定，时不时就挂了。。。</p><h3 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h3><p>  公司里有一台专门搭建内网服务器的机子，供开发者使用，所以想把easy-mock部署到本地，这样接口的稳定性和响应速度得到了保证，而且对团队开发也很有帮助。</p><h3 id="实施："><a href="#实施：" class="headerlink" title="实施："></a>实施：</h3><p>首先先看easy-mock本地部署的官方介绍，<a href="https://github.com/easy-mock/easy-mock/blob/dev/README.zh-CN.md" target="_blank" rel="noopener">https://github.com/easy-mock/easy-mock/blob/dev/README.zh-CN.md</a>.官网介绍的步骤，大致分为以下几步：</p><ol><li>安装 node（&gt;=v8.9） &amp; MongoDB（&gt;=v3.4） &amp; Redis（&gt;=v4.0）</li><li>安装 easy-mock，更改配置文件</li><li>启动 easy-mock，测试项目是否可以正常启动，能的话就可以先 Ctrl + C了</li><li>启动 MongoDB 和 Redis</li><li>npm run build，然后用 PM2 启动 app.js</li></ol><h4 id="1-先装node"><a href="#1-先装node" class="headerlink" title="1.先装node"></a>1.先装node</h4><p>这一步不多讲了，之前有一篇<a href="https://ynzy.github.io/2019/02/10/nvm%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%92%8Cnrm%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%AE%A1%E7%90%86/">nvm版本管理和nrm下载源管理</a>讲到了如何安装管理node版本和npm下载源。我用的是8.15.0，已经放到公司服务器上，</p><h4 id="2-安装MongoDB"><a href="#2-安装MongoDB" class="headerlink" title="2.安装MongoDB"></a>2.安装MongoDB</h4><ul><li>安装包: 百度链接：<a href="https://pan.baidu.com/s/1M7HhtTRW8fE1Oknb0o4TgA" target="_blank" rel="noopener">https://pan.baidu.com/s/1M7HhtTRW8fE1Oknb0o4TgA</a>  提取码：kz8x </li><li><a href="http://baijiahao.baidu.com/s?id=1601512248926547477&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">win版MongoDB安装教程</a></li><li>MongoDB配置环境变量里面写的不清楚，我在这里重写下，</li></ul><pre><code>MONGO_HOME = C:\Program Files\MongoDB\Server\3.4\binPath = %MONGO_HOME%</code></pre><ul><li>推荐使用可视化工具管理数据库，清晰明了，我现找了一个，全是英文看不懂，但也能凑活用了，如果有更好的希望推荐下。</li><li>教程网址<a href="https://www.jianshu.com/p/1194de9859d0" target="_blank" rel="noopener">Robo 3T,mongoDB可视化工具</a></li></ul><h4 id="3-安装redis"><a href="#3-安装redis" class="headerlink" title="3.安装redis"></a>3.安装redis</h4><ul><li>可以直接从<a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a>下载安装包,解压到根目录下面的 opt 文件夹下， 可以根据自己的需求改动 redis.conf 文件，然后输入命令 redis-server，就可以正常启动 redis 了。上面的百度链接里面也有压缩包。</li></ul><h4 id="4-安装easy-mock"><a href="#4-安装easy-mock" class="headerlink" title="4.安装easy-mock"></a>4.安装easy-mock</h4><ul><li>最后要安装的就是 easy-mock，git clone 下来，然后 npm install，安装依赖，npm run dev启动项目，config/default.json 可以自定义的配置，当然不配置倒也没关系，easy-mock会自动使用 MongoDB 和 redis，不需要其他操作。easy-mock 会默认启动在 7300 下面，打开服务器的ip+port，查看 easy-mock 是否正常启动，正常启动了说明安装阶段大功告成！</li><li>自定义配置:在–config下创建local.json文件,</li></ul><pre><code>{  &quot;port&quot;: 7300, //easymock项目启动的端口  &quot;host&quot;: &quot;0.0.0.0&quot;,  &quot;pageSize&quot;: 30,  &quot;proxy&quot;: false,  &quot;db&quot;: &quot;mongodb://localhost/easy-mock&quot;, // 不需要自己新建数据库，在启动的easymock新建接口即可  &quot;unsplashClientId&quot;: &quot;&quot;,  &quot;redis&quot;: {    &quot;port&quot;: 6379, //redis端口    &quot;host&quot;: &quot;localhost&quot;  },  &quot;blackList&quot;: {    &quot;projects&quot;: [], // projectId，例：&quot;5a4495e16ef711102113e500&quot;    &quot;ips&quot;: [] // ip，例：&quot;127.0.0.1&quot;  },  &quot;rateLimit&quot;: { // https://github.com/koajs/ratelimit    &quot;max&quot;: 1000,    &quot;duration&quot;: 1000  },  &quot;jwt&quot;: {    &quot;expire&quot;: &quot;14 days&quot;,    &quot;secret&quot;: &quot;shared-secret&quot;  },  &quot;upload&quot;: {    &quot;types&quot;: [&quot;.jpg&quot;, &quot;.jpeg&quot;, &quot;.png&quot;, &quot;.gif&quot;, &quot;.json&quot;, &quot;.yml&quot;, &quot;.yaml&quot;],    &quot;size&quot;: 5242880,    &quot;dir&quot;: &quot;../public/upload&quot;,    &quot;expire&quot;: {      &quot;types&quot;: [&quot;.json&quot;, &quot;.yml&quot;, &quot;.yaml&quot;],      &quot;day&quot;: -1    }  },  &quot;fe&quot;: {    &quot;copyright&quot;: &quot;&quot;,    &quot;storageNamespace&quot;: &quot;easy-mock_&quot;,    &quot;timeout&quot;: 25000,    &quot;publicPath&quot;: &quot;/dist/&quot;  }}</code></pre><h4 id="5-部署阶段："><a href="#5-部署阶段：" class="headerlink" title="5.部署阶段："></a>5.部署阶段：</h4><ol><li>全局安装pm2</li></ol><pre><code>npm install pm2 -g </code></pre><ol start="2"><li>编译easy-mock文件</li></ol><pre><code>npm run build</code></pre><ol start="3"><li>启动</li></ol><pre><code>pm2 start app.js -i 4</code></pre><ol start="4"><li>查看</li></ol><pre><code>pm2 list</code></pre><ol start="5"><li>访问ip+port</li></ol><pre><code>http://192.168.1.6:7300</code></pre><p>从此再也不用担心easy-mock官网不定时的崩掉了</p><h4 id="参考网址"><a href="#参考网址" class="headerlink" title="参考网址"></a>参考网址</h4><p><a href="https://www.jianshu.com/p/1650c2b9eec9" target="_blank" rel="noopener">easy-mock 本地部署过程</a><br><a href="https://my.oschina.net/guol/blog/1531704" target="_blank" rel="noopener">Easy Mock部署使用</a><br><a href="http://www.cnblogs.com/lentoo/p/9539137.html" target="_blank" rel="noopener">使用pm2自动化部署node项目</a></p>]]></content>
      
      
      <categories>
          
          <category> 模拟数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mock </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿美团项目笔记</title>
      <link href="/2019/03/11/%E4%BB%BF%E7%BE%8E%E5%9B%A2%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/03/11/%E4%BB%BF%E7%BE%8E%E5%9B%A2%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p> 在学习仿美团项目时，对于vue结构、组件拆分布局，路由结构划分、提取公共的url接口上又有了新的收获，进行一些总结</p><h2 id="一、技术选型"><a href="#一、技术选型" class="headerlink" title="一、技术选型"></a>一、技术选型</h2><pre><code>&quot;axios&quot;: &quot;^0.18.0&quot;,&quot;muse-ui&quot;: &quot;^3.0.2&quot;,   //按需引用&quot;node-sass&quot;: &quot;^4.11.0&quot;,&quot;vant&quot;: &quot;^1.6.7&quot;,    //全局使用&quot;vue&quot;: &quot;^2.5.2&quot;,&quot;vue-router&quot;: &quot;^3.0.1&quot;,&quot;vuex&quot;: &quot;^3.1.0&quot;,&quot;less&quot;: &quot;^3.9.0&quot;,&quot;less-loader&quot;: &quot;^4.1.0&quot;,</code></pre><p>  <a href="https://github.com/ynzy/vue-project/tree/master/imitate-meituan" target="_blank" rel="noopener">项目地址</a></p><h2 id="二、src的项目结构"><a href="#二、src的项目结构" class="headerlink" title="二、src的项目结构"></a>二、src的项目结构</h2><pre><code>|--src|  |-- api //存放公共的url和封装axios获取数据方法|  |-- components  //存放公共的组件|  |-- pages  //存放单个组件的页面|  |-- Museui.js  //按需引入museui的组件|  |-- store.js   //进行数据管理</code></pre><h2 id="三、vant和muse-ui的引入"><a href="#三、vant和muse-ui的引入" class="headerlink" title="三、vant和muse-ui的引入"></a>三、vant和muse-ui的引入</h2><h4 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h4><h5 id="1、全局引入vant"><a href="#1、全局引入vant" class="headerlink" title="1、全局引入vant"></a>1、全局引入vant</h5><pre><code>import Vant from &#39;vant&#39;;import &#39;vant/lib/index.css&#39;;Vue.use(Vant);</code></pre><h5 id="2、按需引入muse-ui"><a href="#2、按需引入muse-ui" class="headerlink" title="2、按需引入muse-ui"></a>2、按需引入muse-ui</h5><pre><code>import Vue from &#39;vue&#39;;import &#39;muse-ui/lib/styles/base.less&#39;;import {  AppBar,  Avatar,  Badge,  BottomNav,  Button,  TextField,  theme} from &#39;muse-ui&#39;;import &#39;muse-ui/lib/styles/theme.less&#39;;Vue.use(Icon);Vue.use(Button);Vue.use(AppBar);Vue.use(BottomNav);Vue.use(Paper);Vue.use(TextField);Vue.use(Badge);Vue.use(Avatar);Vue.use(theme);//自定义主题theme.add(&#39;teal&#39;, {  primary: &#39;#009688&#39;,  secondary: &#39;#ff4081&#39;,  success: &#39;#4caf50&#39;,  warning: &#39;#ffeb3b&#39;,}, &#39;light&#39;);theme.use(&#39;teal&#39;);</code></pre><h2 id="四、tabbar组件实现及路由跳转实现"><a href="#四、tabbar组件实现及路由跳转实现" class="headerlink" title="四、tabbar组件实现及路由跳转实现"></a>四、tabbar组件实现及路由跳转实现</h2><ol><li>底部导航菜单栏使用muse-ui的tabbar组件，菜单页面路由通过Main.vue在底部菜单之上实现。</li></ol><pre><code>&lt;template&gt;  &lt;div&gt;    &lt;router-view/&gt;    &lt;mu-paper class=&quot;g-footer&quot;&gt;      &lt;mu-bottom-nav :value=&quot;bottomNav&quot;&gt;        &lt;mu-bottom-nav-item to=&quot;/home&quot; value=&quot;/home&quot; title=&quot;首页&quot; icon=&quot;home&quot;&gt;&lt;/mu-bottom-nav-item&gt;        &lt;mu-bottom-nav-item to=&quot;/recent&quot; value=&quot;/recent&quot; title=&quot;附近&quot; icon=&quot;pin_drop&quot;&gt;&lt;/mu-bottom-nav-item&gt;        &lt;mu-bottom-nav-item to=&quot;/guang&quot; value=&quot;/guang&quot; title=&quot;逛一逛&quot; icon=&quot;language&quot;&gt;&lt;/mu-bottom-nav-item&gt;        &lt;mu-bottom-nav-item to=&quot;/order&quot; value=&quot;/order&quot; title=&quot;订单&quot; icon=&quot;assignment&quot;&gt;&lt;/mu-bottom-nav-item&gt;        &lt;mu-bottom-nav-item to=&quot;/me&quot; value=&quot;/me&quot; title=&quot;我的&quot; icon=&quot;account_circle&quot;&gt;&lt;/mu-bottom-nav-item&gt;      &lt;/mu-bottom-nav&gt;    &lt;/mu-paper&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default {  data() {    return {      bottomNav: &quot;/home&quot;    };  },  methods: {},  mounted() {    //当每次重新挂载(重新刷新)时，重新匹配路由，使导航和路由路径相匹配    // console.log(this.$route.path);    let path = this.$route.path;    if(path==&quot;/&quot;)path=&quot;/home&quot;;    this.bottomNav = path;  }};&lt;/script&gt;&lt;style lang=&quot;less&quot; &gt;//TODO:由于museui字体图标无法显示，直接引入cdn库@import &quot;http://cdn.bootcss.com/material-design-icons/3.0.1/iconfont/material-icons.css&quot;;.g-footer {  position: fixed;  left: 0;  right: 0;  bottom: 0;}.mu-bottom-item {  min-width: 0.62rem;}&lt;/style&gt;</code></pre><ol start="2"><li>页面路由结构</li></ol><pre><code>routes: [    {      path: &#39;/&#39;,      component: Main,      children: [  //TODO: 设置子路由        {          path: &#39;&#39;,  //设置空路由，父级匹配一个子路由          name: &#39;main&#39;,          component: Home        },        {          path: &#39;/home&#39;,          name: &#39;home&#39;,          component: Home        },        {          path: &#39;/recent&#39;,          name: &#39;recent&#39;,          component: Recent        },        {          path: &#39;/guang&#39;,          name: &#39;guang&#39;,          component: Guang        },        {          path: &#39;/order&#39;,          name: &#39;order&#39;,          component: Order        },        {          path: &#39;/me&#39;,          name: &#39;me&#39;,          component: Me        }      ]    },    {      path: &#39;/meishi&#39;,  //单页面路由，不匹配在tabbar上      name: &#39;meishi&#39;,      component: MeShi    }  ]</code></pre><ul><li>由于页面刷新时，底部菜单索引自动匹配第一个路由页面，导致页面与底部菜单活跃状态不符，所以页面重新挂载时，获取此时路由的值，重新给底部菜单活跃项赋值。</li></ul><h2 id="五、页面拆分成组件"><a href="#五、页面拆分成组件" class="headerlink" title="五、页面拆分成组件"></a>五、页面拆分成组件</h2><ul><li>所有的页面中一部分都拆分成单个组件去进行渲染</li><li>示例：</li></ul><h2 id="六、api接口的封装"><a href="#六、api接口的封装" class="headerlink" title="六、api接口的封装"></a>六、api接口的封装</h2><ol><li>–api–config.js,存放公共的url地址</li></ol><pre><code>var url = &quot; https://www.easy-mock.com/mock/5c7d08e7b7a08d1246bef9ff/api/&quot;export {url};</code></pre><ol start="2"><li>—api–shop.js,存放获取商品列表的axios方法</li></ol><pre><code>import axios from &#39;axios&#39;import { url } from &#39;./config&#39;let getShopList = (page) =&gt; {  return axios({    method: &quot;post&quot;,    url: url + &quot;shopList&quot;,    data: {      page: page,      pageSize: 10    }  })}export {  getShopList}</code></pre><ol start="3"><li>api接口的使用–pages–home-HomeShop.vue</li></ol><pre><code>&lt;template&gt;  &lt;div&gt;    &lt;van-list v-model=&quot;loading&quot; :finished=&quot;finished&quot; finished-text=&quot;没有更多了&quot; @load=&quot;onLoad&quot;&gt;      &lt;van-card v-for=&quot;(item,index) in list&quot; :key=&quot;index&quot;&gt;        &lt;div slot=&quot;title&quot;&gt;          &lt;strong&gt;{{item.desc}}&lt;/strong&gt;          &lt;div class=&quot;distance&quot;&gt;&lt; 500m&lt;/div&gt;        &lt;/div&gt;        &lt;div slot=&quot;desc&quot;&gt;{{item.pos}}{{item.id}}&lt;/div&gt;        &lt;div slot=&quot;price&quot;&gt;          &lt;span&gt;￥{{item.price}}&lt;/span&gt;          &lt;van-tag size=&quot;medium&quot; type=&quot;danger&quot;&gt;劲爆&lt;/van-tag&gt;          &lt;div class=&quot;workoff&quot;&gt;已售{{item.sales}}&lt;/div&gt;        &lt;/div&gt;        &lt;div slot=&quot;thumb&quot;&gt;          &lt;img :src=&quot;&#39;/static/shoplog/&#39;+ item.imgurl&quot; alt&gt;        &lt;/div&gt;      &lt;/van-card&gt;    &lt;/van-list&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import { getShopList } from &quot;@/api/shop&quot;;  //引入获取商品列表分页数据的方法export default {  data() {    return {       list: [],      loading: false,      finished: false       page: 0    };  },  mounted() {},  methods: {    onLoad() {      this.page++      // 数据全部加载完成      setTimeout(() =&gt; {        getShopList(this.page)          .then(res =&gt; {            if (res.data.success) {              //遍历获取的数据添加到商品列表数组中进行渲染               res.data.shop.forEach(item =&gt; {                 this.list.push(item);               });              // 加载状态结束              this.loading = false;            }          })          .catch(function(err) {            alert(&quot;接口错误：&quot; + err);          });      }, 2000);      //如果获取数据长度超过了70,则不再获取数据      if (this.list.length &gt;= 70) {        this.finished = true;      }    }  }};&lt;/script&gt;&lt;style lang=&quot;less&quot; scoped&gt;.van-list {  //深度作用选择器: 如果你希望 scoped 样式中的一个选择器能够作用得“更深”，例如影响子组件，你可以使用 &gt;&gt;&gt; 操作符,使用预编译器则使用 &quot;/deep/ &quot;  /deep/ .van-card {       background: #fff;  }}.van-card__price {  margin-top: 5px;  width: 100%;}.van-card__content {  strong {    font-size: 14px;  }}.distance {  float: right;  width: 0.6rem;  text-align: right;  font-weight: 500;  color: #000;}.workoff {  float: right;  width: 0.6rem;  text-align: right;  font-weight: 500;  color: #000;}&lt;/style&gt;</code></pre><h2 id="七、使用vuex管理数据"><a href="#七、使用vuex管理数据" class="headerlink" title="七、使用vuex管理数据"></a>七、使用vuex管理数据</h2><ul><li>创建store.js对商品列表的分页数据进行管理</li></ul><pre><code>import Vue from &#39;vue&#39;import Vuex from &#39;vuex&#39;Vue.use(Vuex);var state = {  shop: {    num: 1,    list: [],    page: 0  }}const mutations = {  setshoplist(state, data) {  //设置商品列表数据    state.shop.list = state.shop.list.concat(data)  //拼接数组  },  nextpage(state){  //下一页    state.shop.page++;  }}export default new Vuex.Store({  state,  mutations})</code></pre><ul><li>在HomeShop.vue页面使用vuex接收数据</li></ul><pre><code>&lt;script&gt; import { mapState } from &quot;vuex&quot;;  //引入vuex数据mapState辅助函数import { getShopList } from &quot;@/api/shop&quot;;  //引入获取商品列表分页数据的方法export default {  data() {    return {      // list: [],      loading: false,      finished: false      // page: 0    };  },  computed: {    ...mapState({      list: state =&gt; state.shop.list,  //获取vuex中的list数据      page: state =&gt; state.shop.page   //获取vuex中的分页数据    })  },  mounted() {},  methods: {    onLoad() {      //每次加载刷新，页数加1      this.$store.commit(&quot;nextpage&quot;);  //提交页数突变的方法      // 数据全部加载完成      setTimeout(() =&gt; {        getShopList(this.page)          .then(res =&gt; {            if (res.data.success) {              this.$store.commit(&quot;setshoplist&quot;, res.data.shop);  //提交商品数据突变方法              // 加载状态结束              this.loading = false;            }          })          .catch(function(err) {            alert(&quot;接口错误：&quot; + err);          });      }, 2000);      //如果获取数据长度超过了70,则不再获取数据      if (this.list.length &gt;= 70) {        this.finished = true;      }    }  }};&lt;/script&gt;</code></pre><h2 id="八、制作svg图标，引入自定义图标"><a href="#八、制作svg图标，引入自定义图标" class="headerlink" title="八、制作svg图标，引入自定义图标"></a>八、制作svg图标，引入自定义图标</h2><ol><li>使用Ai制作svg图标，保存为svg格式</li><li>进入<a href="https://icomoon.io/" target="_blank" rel="noopener">制作字体图标官网</a></li><li><img src="https://upload-images.jianshu.io/upload_images/13505073-9ef52fe4d4c425fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入svg图标"><br><img src="https://upload-images.jianshu.io/upload_images/13505073-3fad0e483ac4358d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="导入svg图标"></li><li>也可以选择观望已有的图标，选择之后下方有显示，<br><img src="https://upload-images.jianshu.io/upload_images/13505073-dd2da770c8da4987.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li><li>点击下方<em>Generate Font F</em>按钮对选择的图标进行设置，然后下载<br><img src="https://upload-images.jianshu.io/upload_images/13505073-74c8a897cca4700d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击preferences进行个性化设置"></li><li>得到解压包以后，把解压的文件放在<code>assets</code>文件夹中，此文件夹会被打包编译，</li><li>解决样式冲突问题：<ul><li>由于项目引入了其他ui框架，本身有字体图标，会与自定义图标冲突，需要解决</li><li>编写–style.scss文件</li></ul></li></ol><pre><code>//TODO: 解决字体图标库与框架的字体图标库的冲突问题//以&quot;icon-mt-&quot;打头，包含&quot; icon-mt-&quot;的，css3选择器i[class^=&quot;icon-mt-&quot;],i[class*=&quot; icon-mt-&quot;] {  font-family: &#39;#{$icomoon-font-family}&#39; !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}</code></pre><ol start="8"><li>如果想添加样式直接在–style.scss文件添加</li></ol><pre><code>.icon-mt-hezuo {  &amp;:before {    content: $icon-mt-hezuo;         color: $icon-mt-color;  }}//默认没有状态样式，自定义添加.icon-mt-hezuo:active {  &amp;:before {    content: $icon-mt-hezuo;         color: red;  }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> vue项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中数据交互和传参方式</title>
      <link href="/2019/03/03/vue%E4%B8%AD%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92%E5%92%8C%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/03/03/vue%E4%B8%AD%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92%E5%92%8C%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- # vue中数据交互和传参方式 --><h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><p>通过vue-music-app项目，初步熟悉vue中的数据交互和传参方式，此项目中使用到了<br>vuex，vue-router，props，solt传参方式进行页面传参，以及如何设置代理服务器对访问的ip地址进行管理<br>，并且使用到了vant按需引入轮播图组件。</p><p><a href="https://github.com/ynzy/vue-project/tree/master/vue-music-app" target="_blank" rel="noopener">源码地址</a></p><h2 id="二、传参方式"><a href="#二、传参方式" class="headerlink" title="二、传参方式"></a>二、传参方式</h2><h3 id="1、插槽分发内容"><a href="#1、插槽分发内容" class="headerlink" title="1、插槽分发内容"></a>1、插槽分发内容</h3><ul><li>定义一个组件，在组件内写入<code>&lt;slot&gt;&lt;/slot&gt;</code>标签，当调用组件时，组件中如果有内容，则会替换slot标签渲染数据。</li><li><p>新建一个slider组件：</p><pre><code>&lt;template&gt;&lt;!-- TODO:vue通过ref设置dom元素，通过$refs方法获取此dom节点 --&gt;&lt;div class=&quot;slider&quot; ref=&quot;slider&quot;&gt;  &lt;div class=&quot;sliderGroup&quot; ref=&quot;sliderGroup&quot;&gt;    &lt;slot&gt;&lt;/slot&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/template&gt;</code></pre></li><li><p>新建一个recommend.vue组件，调用slider组件</p><pre><code>&lt;template&gt;  &lt;div class=&quot;recommend&quot;&gt;    &lt;h2 class=&quot;recommendlist&quot;&gt;推荐歌单&lt;/h2&gt;    &lt;slider&gt;      &lt;!-- TODO:使用插槽,通过组件的slot标签，替换数据 --&gt;      &lt;div v-for=&quot;item in slider&quot; :key=&quot;item.id&quot;&gt;        {{ item.songName }}      &lt;/div&gt;    &lt;/slider&gt;&lt;/div&gt;&lt;/template&gt;&lt;script&gt;import slider from &quot;./slider.vue&quot;;export default {  data() {    return {       slider: []    };  },  components: {  //调用slider组件    slider  },  methods: {      getSlider() {  //获取数据存储在slider数组中        this.$axios.get(&quot;http://www.wanandroid.com/tools/mockapi/9664/songlist&quot;).then(resp =&gt; {          if (resp.status == 200) {            this.slider = resp.data;          }        });      },  }&lt;/script&gt;</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13505073-e3539c75d7ee9299.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="页面效果.png"></p></li></ul><h3 id="2、通过props进行父子组件传参"><a href="#2、通过props进行父子组件传参" class="headerlink" title="2、通过props进行父子组件传参"></a>2、通过props进行父子组件传参</h3><ul><li><p>有些时候，我们定义一个组件，在多个地方调用，而所需展示的数据不同，可以通过props传参方式对组件进行页面渲染</p></li><li><p>新建一个Songlist.vue组件</p></li></ul><pre><code>&lt;!-- 不同数据调用此模板 --&gt;&lt;template&gt;  &lt;div&gt;    &lt;ul&gt;      &lt;li class=&quot;songli&quot; v-for=&quot;item in songList&quot; @click=&quot;selectSong(item)&quot;&gt;        &lt;div class=&quot;songinfor&quot;&gt;          &lt;p class=&quot;title&quot;&gt;{{item.songName}}&lt;/p&gt;          &lt;p class=&quot;singer&quot; style=&quot;font-size:12px;color:#888&quot;&gt;{{item.singer}}&lt;/p&gt;        &lt;/div&gt;        &lt;p class=&quot;start&quot;&gt;          &lt;img src=&quot;../../static/img/start.png&quot;&gt;        &lt;/p&gt;      &lt;/li&gt;    &lt;/ul&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default {    props: [&quot;songList&quot;],  //通过props接收父组件传送的数据};&lt;/script&gt;</code></pre><ul><li>新建一个recommend.vue,调用子组件SongList</li></ul><pre><code>&lt;template&gt;  &lt;div class=&quot;recommend&quot;&gt;      &lt;!-- TODO:动态绑定数据songList数据，子组件通过props接收数据 --&gt;    &lt;songList :song-list=&quot;songList&quot;&gt;&lt;/songList&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import songList from &quot;./Songlist.vue&quot;export default {  data() {    return {       songList: []    };  },  components: {    songList,  },  methods: {    getSongList() {      this.$axios.get(&quot;http://www.wanandroid.com/tools/mockapi/9664/recommend&quot;).then(resp =&gt; {        if (resp.status == 200) {          this.songList = resp.data;        }      });    }  }};&lt;/script&gt;</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13505073-a447d0175d80d847.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="页面效果.png"></p><ul><li>新建一个Hot.vue组件，也调用子组件Songlist</li></ul><pre><code>&lt;template&gt;  &lt;div id=&quot;hot&quot;&gt;            &lt;div class=&quot;banner&quot;&gt;            热门歌曲        &lt;/div&gt;        &lt;!-- 动态绑定数据hotList数据 --&gt;        &lt;songList :song-list=&quot;hotList&quot;&gt;&lt;/songList&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import songList from &quot;./Songlist.vue&quot;    export default {                data() {            return {hotList: []}        },        methods: {            getHotList() {                 this.$axios.get(&quot;http://www.wanandroid.com/tools/mockapi/9664/recommend&quot;).then(resp =&gt; {                    if (resp.status == 200) {                        this.hotList = resp.data;                    }                });            }        },        mounted() {            this.getHotList()        },        components: {            songList        }    }&lt;/script&gt;</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/13505073-b754df0159ac607c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="页面效果.png"></p><h3 id="3、使用vue-router进行页面传参"><a href="#3、使用vue-router进行页面传参" class="headerlink" title="3、使用vue-router进行页面传参"></a>3、使用vue-router进行页面传参</h3><ul><li>点击某个菜单项，跳转到另一个组件页面时可以使用vue-router进行传参</li><li>对路由进行配置<br><img src="https://upload-images.jianshu.io/upload_images/13505073-63cd4d2cd00d4d86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="路由配置.png"></li><li>在songList组件添加点击事件跳转查看详情页</li></ul><pre><code>&lt;!-- 不同数据调用此模板 --&gt;&lt;template&gt;  &lt;div&gt;    &lt;ul&gt;      &lt;li class=&quot;songli&quot; v-for=&quot;item in songList&quot; @click=&quot;selectSong(item)&quot;&gt;        &lt;div class=&quot;songinfor&quot;&gt;          &lt;p class=&quot;title&quot;&gt;{{item.songName}}&lt;/p&gt;          &lt;p class=&quot;singer&quot; style=&quot;font-size:12px;color:#888&quot;&gt;{{item.singer}}&lt;/p&gt;        &lt;/div&gt;        &lt;p class=&quot;start&quot;&gt;          &lt;img src=&quot;../../static/img/start.png&quot;&gt;        &lt;/p&gt;      &lt;/li&gt;    &lt;/ul&gt;  &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default {    props: [&quot;songList&quot;],    methods: {        selectSong(item) {            // 直接调用$router.push,实现携带参数的跳转            // this.$router.push({            //     &quot;name&quot; : &quot;Detail&quot;,  //发送跳转页面名字            //     &quot;params&quot; : {item,item} //TODO: 通过路由的params进行传参            // })            this.$router.push({                &quot;path&quot;: &quot;/detail/:item&quot;,                &quot;query&quot;: {item: JSON.stringify(item)}  //TODO: 通过路由的query进行传参            })        },    }};&lt;/script&gt;</code></pre><ul><li>新建detail.vue组件，接收页面传参</li></ul><pre><code>&lt;template&gt;    &lt;transition name=&quot;slider&quot;&gt;        &lt;div class=&quot;detail&quot;&gt;                &lt;div class=&quot;songimg&quot;&gt;                    &lt;img :src=&quot;songDetail.songImgSrc&quot;&gt;                &lt;/div&gt;                &lt;div class=&quot;songtitle&quot;&gt;                    {{songDetail.songName}}                &lt;/div&gt;                &lt;div class=&quot;songaudio&quot;&gt;                    &lt;audio autoplay=&quot;autoplay&quot;&gt;                        &lt;source src=&quot;static/song/song.ogg&quot; type=&quot;audio/ogg&quot; /&gt;                        &lt;source src=&quot;static/song/song.mp3&quot; type=&quot;audio/mpeg&quot; /&gt;                    &lt;/audio&gt;                &lt;/div&gt;            &lt;/div&gt;    &lt;/transition&gt;&lt;/template&gt;&lt;script&gt;    export default {        data() {            return {                songDetail: {}            }        },        mounted () {            //TODO:parmas传参不可以刷新，会丢失数据，query可以刷新页面            // console.log(this.$route.params) //$route接收传递的参数            // this.songDetail = this.$route.params.item  //TODO: params接收路由传递的参数            this.songDetail = JSON.parse(this.$route.query.item); //TODO: query接收路由传递的参数        },    }&lt;/script&gt;</code></pre><h3 id="4、使用vuex进行数据管理"><a href="#4、使用vuex进行数据管理" class="headerlink" title="4、使用vuex进行数据管理"></a>4、使用vuex进行数据管理</h3><ul><li>使用vuex可以更好的管理数据状态，使数据得到共享</li><li>安装vuex <code>npm install vuex --save</code></li><li>新建store文件夹，同一组织store文件<br><img src="https://upload-images.jianshu.io/upload_images/13505073-b8ff747ee5b2c8b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="store文件结构.png"><h5 id="1-在main-js引入store"><a href="#1-在main-js引入store" class="headerlink" title="(1) 在main.js引入store"></a>(1) 在main.js引入store</h5></li></ul><pre><code>import Vue from &#39;vue&#39;import App from &#39;./App&#39;import router from &#39;./router&#39;import axios from &#39;axios&#39;import store from &#39;./store/index&#39;  //导入store主文件indexVue.prototype.$axios = axios  //将axios添加到vue的原型上，所有vue实例上都可以使用axiosVue.config.productionTip = falsenew Vue({  el: &#39;#app&#39;,  store,  //添加在vue实例上  router,  components: { App },  template: &#39;&lt;App/&gt;&#39;})</code></pre><h5 id="2-编写store文件夹"><a href="#2-编写store文件夹" class="headerlink" title="(2) 编写store文件夹"></a>(2) 编写store文件夹</h5><ul><li><p>index.js</p><pre><code>import Vue from &#39;vue&#39;import Vuex from &#39;vuex&#39;import getters from &#39;./getters&#39;import state from &#39;./state&#39;import mutations from &#39;./mutations&#39;import actions from &#39;./action&#39;Vue.use(Vuex)export default new Vuex.Store({  getters,  state,  mutations,  actions})</code></pre></li><li>state.js  //数据管理<pre><code>const state = {  song: {}}export default {  state}</code></pre></li><li>getters.js  //管理数据状态，相当于computed(计算)属性<pre><code>const getters={getSong(state){  return state.song;}}export default getters;</code></pre></li><li><p>actions.js  //提交数据变化，一把用于异步获取数据，相当于methods(方法)属性</p><pre><code>import types from &#39;./types.js&#39;import axios from &#39;axios&#39;const actions = {getSongAsync({commit,state}) {  axios.get(&quot;/recommend/&quot;).then(resp =&gt; {    if (resp.status == 200) {      commit(types.GET_SONG, resp.data);  //提交突变    }  });}}export default actions;</code></pre></li><li><p>mutations.js //改变数据状态，也就相当于对state数据进行更新</p><pre><code>import types from &#39;./types&#39;const mutations = {  [types.GET_SONG](state,data) {      state.song = data      console.log(data)  }}export default mutations</code></pre></li><li><p>types.js  //定义方法名常量，管理方法名</p><pre><code>const GET_SONG = &quot;GET_SONG&quot;  export default {  GET_SONG}</code></pre></li></ul><h5 id="3-在detail-vue组件调用state中的数据"><a href="#3-在detail-vue组件调用state中的数据" class="headerlink" title="(3) 在detail.vue组件调用state中的数据"></a>(3) 在detail.vue组件调用state中的数据</h5><pre><code>&lt;script&gt;import { mapGetters, mapActions } from &quot;vuex&quot;;export default {  computed: {    ...mapGetters([&quot;getSong&quot;])  //此数据可以直接在页面模板调用  },  created() {    this.$store.dispatch(&quot;getSongAsync&quot;);  //页面初始化时发送事件  }};&lt;/script&gt;</code></pre><h2 id="三、引入Vant"><a href="#三、引入Vant" class="headerlink" title="三、引入Vant"></a>三、引入Vant</h2><h3 id="Vant按需引入组件"><a href="#Vant按需引入组件" class="headerlink" title="Vant按需引入组件"></a>Vant按需引入组件</h3><p><a href="https://youzan.github.io/vant/#/zh-CN/intro" target="_blank" rel="noopener">官方网址</a></p><h5 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h5><p><code>npm i vant -S</code></p><ul><li>babel-plugin-import 是一款 babel 插件，它会在编译过程中将 import 的写法自动转换为按需引入的方式</li></ul><pre><code># 安装 babel-plugin-import 插件npm i babel-plugin-import -D</code></pre><pre><code>// .babelrc 中配置// 注意：webpack 1 无需设置 libraryDirectory{  &quot;plugins&quot;: [    [&quot;import&quot;, {      &quot;libraryName&quot;: &quot;vant&quot;,      &quot;libraryDirectory&quot;: &quot;es&quot;,      &quot;style&quot;: true    }]  ]}</code></pre><blockquote><p>!注意：配置 babel-plugin-import 插件后将不允许导入所有组件</p></blockquote><h5 id="2、新建–src-vant-components-js按需使用swiper组件"><a href="#2、新建–src-vant-components-js按需使用swiper组件" class="headerlink" title="2、新建–src/vant-components.js按需使用swiper组件"></a>2、新建–src/vant-components.js按需使用swiper组件</h5><pre><code>import Vue from &#39;vue&#39;import { Swipe, SwipeItem } from &#39;vant&#39;;Vue.use(Swipe).use(SwipeItem);</code></pre><h5 id="3、在main引入vant-components-js即可在所有页面使用引入的组件"><a href="#3、在main引入vant-components-js即可在所有页面使用引入的组件" class="headerlink" title="3、在main引入vant-components.js即可在所有页面使用引入的组件"></a>3、在main引入vant-components.js即可在所有页面使用引入的组件</h5><p><img src="https://upload-images.jianshu.io/upload_images/13505073-6696122287b34157.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="引入组件.png"></p><h5 id="4、此时就可以在vue组件中使用vant的swipe组件了"><a href="#4、此时就可以在vue组件中使用vant的swipe组件了" class="headerlink" title="4、此时就可以在vue组件中使用vant的swipe组件了"></a>4、此时就可以在vue组件中使用vant的swipe组件了</h5><p><img src="https://upload-images.jianshu.io/upload_images/13505073-132545809587e068.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用组件.png"></p><h2 id="四、配置代理服务器"><a href="#四、配置代理服务器" class="headerlink" title="四、配置代理服务器"></a>四、配置代理服务器</h2><h3 id="编译打包前要做的事"><a href="#编译打包前要做的事" class="headerlink" title="编译打包前要做的事"></a>编译打包前要做的事</h3><h5 id="1、修改文件–config-index-js"><a href="#1、修改文件–config-index-js" class="headerlink" title="1、修改文件–config/index.js"></a>1、修改文件–config/index.js</h5><ul><li>找到build中<code>assetsPublicPath</code>选项进行修改<br><img src="https://upload-images.jianshu.io/upload_images/13505073-c6c836fa4a06e0e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改assetsPublicPath选项.png"><h5 id="2、修改文件–config-index-js，进行代理服务器配置"><a href="#2、修改文件–config-index-js，进行代理服务器配置" class="headerlink" title="2、修改文件–config/index.js，进行代理服务器配置"></a>2、修改文件–config/index.js，进行代理服务器配置</h5></li><li>找到dev中的<code>proxyTable</code>进行代理服务器配置，统一管理接口</li></ul><pre><code>proxyTable: {  &#39;/song&#39;: {  //匹配项,放在项目调用中    target: &#39;http://www.wanandroid.com/tools/mockapi/9664/songlist&#39;, // 接口域名    // secure: false,  // 如果是https接口，需要配置这个参数    changeOrigin: true, //是否跨域    pathRewrite: { //重写地址      &#39;^/song&#39;: &#39;&#39; //因为接口中没有这个匹配项，所以要重写地址，才能正常访问    }  },}</code></pre><h5 id="3、修改文件–build-utils-js"><a href="#3、修改文件–build-utils-js" class="headerlink" title="3、修改文件–build/utils.js"></a>3、修改文件–build/utils.js</h5><ul><li>找到<code>ExtractTextPlugin.extract</code>，添加<code>publicPath</code>选项</li></ul><pre><code>if (options.extract) {    return ExtractTextPlugin.extract({      publicPath: &#39;../../&#39;,  //TODO:css中用到资源时需要加的属性      use: loaders,      fallback: &#39;vue-style-loader&#39;    })  } else {    return [&#39;vue-style-loader&#39;].concat(loaders)  }</code></pre>]]></content>
      
      
      <categories>
          
          <category> 脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue-cli3 项目创建-配置-发布</title>
      <link href="/2019/02/28/vue-cli3%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA-%E9%85%8D%E7%BD%AE-%E5%8F%91%E5%B8%83/"/>
      <url>/2019/02/28/vue-cli3%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA-%E9%85%8D%E7%BD%AE-%E5%8F%91%E5%B8%83/</url>
      
        <content type="html"><![CDATA[<h2 id="一、使用的技术"><a href="#一、使用的技术" class="headerlink" title="一、使用的技术"></a>一、使用的技术</h2><blockquote><p>vue-cli3<br>vuex<br>axios<br>采用的数据接口，easy-mock</p></blockquote><h2 id="二、初始化项目"><a href="#二、初始化项目" class="headerlink" title="二、初始化项目"></a>二、初始化项目</h2><ul><li>首先需要安装vue-cli3,<a href="https://cli.vuejs.org/zh/guide/installation.html" target="_blank" rel="noopener">官方教程</a></li><li>初始化安装，并成功启动,</li><li>初始化项目默认安装router<br><img src="https://upload-images.jianshu.io/upload_images/13505073-f363a00b6f8a8341.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/576/format/webp" alt="创建vue"><br><img src="https://upload-images.jianshu.io/upload_images/13505073-a3f0202c13195228.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/570/format/webp" alt="创建vue"><pre><code>vue init webpack itanycd itanynpm installnpm install less less-loader -D  //生产依赖npm install vuex axios -S       //开发依赖npm run dev</code></pre><img src="https://upload-images.jianshu.io/upload_images/7704547-e0d94506f32722cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/530/format/webp" alt="vue"></li></ul><h2 id="三、项目结构"><a href="#三、项目结构" class="headerlink" title="三、项目结构"></a>三、项目结构</h2><ul><li>项目文件介绍<pre><code>|-- build                            // 项目构建(webpack)相关代码|   |-- build.js                     // 生产环境构建代码|   |-- check-version.js             // 检查node、npm等版本|   |-- utils.js                     // 构建工具相关|   |-- vue-loader.conf.js           // webpack loader配置|   |-- webpack.base.conf.js         // webpack基础配置|   |-- webpack.dev.conf.js          // webpack开发环境配置,构建开发本地服务器|   |-- webpack.prod.conf.js         // webpack生产环境配置|-- config                           // 项目开发环境配置|   |-- dev.env.js                   // 开发环境变量|   |-- index.js                     // 项目一些配置变量|   |-- prod.env.js                  // 生产环境变量|-- src                              // 源码目录|   |-- assets                       // 静态资源|   |-- components                   // vue公共组件|   |-- router                       // vue的路由管理|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- static                           // 静态文件，比如一些图片，json数据等|-- .babelrc                         // ES6语法编译配置|-- .editorconfig                    // 定义代码格式|-- .gitignore                       // git上传需要忽略的文件格式|-- .postcsssrc                       // postcss配置文件|-- README.md                        // 项目说明|-- index.html                       // 入口页面|-- package.json                     // 项目基本信息,包依赖信息等</code></pre></li><li>自定义修改项目结构<pre><code>|-- src                              // 源码目录|   |-- common                       // 公共的文件|   |   |-- css|   |   |-- js|   |   |-- images|   |-- components                   // vue公共组件|   |-- router                       // vue的路由管理|   |-- store                        // vuex数据状态管理|   |   |-- modules       // 存储数据模块，每个模块都可以拥有自己的state、getters、actions、mutations|   |   |   |-- seller.js  // 一个模块|   |   |-- actions.js    // 公共的方法（动作）|   |   |-- getters.js    // 获取公共的属性|   |   |-- mutations.js  // 公共的数据变化|   |   |-- index.js      // vuex初始化入口|   |   |-- types.js      // 存储方法名（大写）|   |-- App.vue                      // 页面入口文件|   |-- main.js                      // 程序入口文件，加载各种公共组件|-- static|   |-- css                          //添加静态资源|   |   |-- reset.css</code></pre><img src="https://upload-images.jianshu.io/upload_images/13505073-ba38588610b37509.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目结构"></li></ul><h2 id="四、删除替换多余文件及代码"><a href="#四、删除替换多余文件及代码" class="headerlink" title="四、删除替换多余文件及代码"></a>四、删除替换多余文件及代码</h2><h3 id="1、修改文件–src-App-vue"><a href="#1、修改文件–src-App-vue" class="headerlink" title="1、修改文件–src/App.vue"></a>1、修改文件–src/App.vue</h3><pre><code>```&lt;template&gt;    &lt;div id=&quot;app&quot;&gt;        &lt;v-header&gt;&lt;/v-header&gt;        &lt;router-view&gt;&lt;/router-view&gt;    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import Header from &#39;./components/header/Header.vue&#39;export default {name: &#39;App&#39;,components: {    &#39;v-header&#39;: Header}}&lt;/script&gt;```</code></pre><h3 id="2、修改文件–router-inedx-js"><a href="#2、修改文件–router-inedx-js" class="headerlink" title="2、修改文件–router/inedx.js"></a>2、修改文件–router/inedx.js</h3><ul><li>删除路由配置</li></ul><pre><code>import Vue from &#39;vue&#39;import Router from &#39;vue-router&#39;Vue.use(Router)export default new Router({  routes: [  ]})</code></pre><h3 id="3、添加文件–components-header-Header-vue"><a href="#3、添加文件–components-header-Header-vue" class="headerlink" title="3、添加文件–components/header/Header.vue"></a>3、添加文件–components/header/Header.vue</h3><pre><code>&lt;template&gt;    &lt;div&gt;        欢迎来到我的世界    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;    export default {    }&lt;/script&gt;&lt;style lang=&quot;less&quot; scoped&gt;&lt;/style&gt;</code></pre><h3 id="4、删除–components-HelloWorld-vue"><a href="#4、删除–components-HelloWorld-vue" class="headerlink" title="4、删除–components/HelloWorld.vue"></a>4、删除–components/HelloWorld.vue</h3><h3 id="5、启动项目预览"><a href="#5、启动项目预览" class="headerlink" title="5、启动项目预览"></a>5、启动项目预览</h3><p><img src="https://upload-images.jianshu.io/upload_images/13505073-aa6c0baf7863a0ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="五、完善vuex结构"><a href="#五、完善vuex结构" class="headerlink" title="五、完善vuex结构"></a>五、完善vuex结构</h2><h3 id="1、新建文件vuex–src-store-index-js"><a href="#1、新建文件vuex–src-store-index-js" class="headerlink" title="1、新建文件vuex–src/store/index.js"></a>1、新建文件vuex–src/store/index.js</h3><pre><code>import Vue from &#39;vue&#39;import Vuex from &#39;vuex&#39;import getters from &#39;./getters&#39;import actions from &#39;./actions&#39;import seller from &#39;./modules/seller&#39;Vue.use(Vuex);export default new Vuex.Store({    getters,    actions,    modules: {        seller    }})</code></pre><h3 id="2、引入vuex–src-main-js"><a href="#2、引入vuex–src-main-js" class="headerlink" title="2、引入vuex–src/main.js"></a>2、引入vuex–src/main.js</h3><pre><code>import Vue from &#39;vue&#39;import App from &#39;./App&#39;import router from &#39;./router&#39;import store from &#39;./store/index.js&#39;Vue.config.productionTip = false/* eslint-disable no-new */new Vue({  el: &#39;#app&#39;,  router,  store,  template: &#39;&lt;App/&gt;&#39;,  components: { App }})</code></pre><h3 id="3、新建文件–src-store-getter-js"><a href="#3、新建文件–src-store-getter-js" class="headerlink" title="3、新建文件–src/store/getter.js"></a>3、新建文件–src/store/getter.js</h3><pre><code>const getters={}export default getters;</code></pre><h3 id="4、新建文件–scr-store-types-js"><a href="#4、新建文件–scr-store-types-js" class="headerlink" title="4、新建文件–scr/store/types.js"></a>4、新建文件–scr/store/types.js</h3><pre><code>const GET_SELLER = &quot;GET_SELLER&quot;export default {  GET_SELLER,}</code></pre><h3 id="5、新建文件–src-store-meodules-seller-js"><a href="#5、新建文件–src-store-meodules-seller-js" class="headerlink" title="5、新建文件–src/store/meodules/seller.js"></a>5、新建文件–src/store/meodules/seller.js</h3><pre><code>import types from &quot;../types&quot;import axios from &quot;axios&quot;const state = {  //数据源    seller: {}}const getters= {  //获取数据    seller(state) {        return state.seller    }}const actions = {  //执行发生的动作，提交一个变化    getSeller({commit,state}) {        axios.get(&#39;https://easy-mock.com/mock/5c74af248a68351906bd9aaf/example/seller&#39;).then(resp =&gt; {            // console.log(resp)            if(resp.data.success==200) {                  commit(types.GET_SELLER,resp.data.seller)            }        })    }}const mutations= {  //更新数据源    [types.GET_SELLER](state,data) {        state.seller = data    }}export default {    state,    getters,    actions,    mutations}</code></pre><h3 id="6、修改文件–src-components-header-Header-Vue"><a href="#6、修改文件–src-components-header-Header-Vue" class="headerlink" title="6、修改文件–src/components/header/Header.Vue"></a>6、修改文件–src/components/header/Header.Vue</h3><pre><code>&lt;template&gt;    &lt;div class=&quot;header&quot;&gt;        &lt;img :src=&quot;seller.avatar&quot; alt=&quot;altText&quot;/&gt;        &lt;br&gt;        {{seller.name}}    &lt;/div&gt;&lt;/template&gt;&lt;script&gt;import { mapGetters } from &#39;vuex&#39;;    export default {        created () {            this.$store.dispatch(&#39;getSeller&#39;);  //执行变化，发送actions        },        computed: {            //对象展开运算符，获取seller数据            ...mapGetters([&#39;seller&#39;])        }    }&lt;/script&gt;&lt;style lang=&quot;less&quot; scoped&gt;.header {    img {        width: 64px;        height: 64px;    }}&lt;/style&gt;</code></pre><h3 id="7、运行效果"><a href="#7、运行效果" class="headerlink" title="7、运行效果"></a>7、运行效果</h3><p><img src="https://upload-images.jianshu.io/upload_images/13505073-9e6894da99ea7210.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 脚手架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm版本管理和nrm下载源管理</title>
      <link href="/2019/02/10/nvm%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%92%8Cnrm%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%AE%A1%E7%90%86/"/>
      <url>/2019/02/10/nvm%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%92%8Cnrm%E4%B8%8B%E8%BD%BD%E6%BA%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><img src="http://pl7h7g4ko.bkt.clouddn.com/18760162_p0.jpg" alt="壁纸" title="&#39;壁纸&#39;"></p><h3 id="一、NVM-介绍"><a href="#一、NVM-介绍" class="headerlink" title="一、NVM 介绍"></a>一、NVM 介绍</h3><p> 我们可能同时在进行2个 项目，而2个不同的项目所使用的node版本又是不一样的，或者是要用更新的node版本进行试验和学习。这种情况下，对于维护多个版本的node将会是一件非常麻烦的事情，而nvm就是为解决这个问题而产生的，他可以方便的在同一台设备上进行多个node版本之间切换，而这个正是nvm的价值所在，详情可以查看官网<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">NVM官网</a>。</p><h3 id="二、NVM-安装"><a href="#二、NVM-安装" class="headerlink" title="二、NVM 安装"></a>二、NVM 安装</h3><h4 id="1-nvm-下载"><a href="#1-nvm-下载" class="headerlink" title="1.nvm 下载"></a>1.nvm 下载</h4><p>首先，如果已经安装过了 node，一定要卸载干净，如果不可以就要重装系统了（说多了都是泪，自己也是遇到了 node 版本问题才开始研究 nvm 的）<br>直接进入安装包下载地址：<a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a>，选择nvm-setup.zip，下载后直接安装。<br><img src="https://upload-images.jianshu.io/upload_images/9989643-782fc61e7d13d273.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/495/format/webp" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/9989643-7a8d4831b2ea94c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/497/format/webp" alt=""></p><h4 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h4><p><img src="https://upload-images.jianshu.io/upload_images/9989643-5f50d9e75945e9aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt=""></p><h4 id="3-验证是否安装成功"><a href="#3-验证是否安装成功" class="headerlink" title="3.验证是否安装成功"></a>3.验证是否安装成功</h4><p> 打开命令行，执行nvm -v命令后，出现一下类似的提示说明安装成功。<br> <img src="https://upload-images.jianshu.io/upload_images/9989643-c02e5e0a20388757.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/981/format/webp" alt=""></p><h4 id="4-安装-nodejs"><a href="#4-安装-nodejs" class="headerlink" title="4.安装 nodejs"></a>4.安装 nodejs</h4><p>  使用nvm install <version> [<arch>]命令下载需要的版本。arch参数表示系统位数，默认是64位，如果是32位操作系统，需要执行命令：nvm install 6.9.0 32，出现下图表示安装完成：<br>  <img src="https://upload-images.jianshu.io/upload_images/9989643-1621e43a07b1180c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/879/format/webp" alt=""></arch></version></p><h4 id="5-使用特定版本的-nodejs"><a href="#5-使用特定版本的-nodejs" class="headerlink" title="5.使用特定版本的 nodejs"></a>5.使用特定版本的 nodejs</h4><p> 执行nvm use <version> [<arch>] 命令开始使用特定版本。比如：nvm use 6.9.0或者nvm use 6.9.0 32<br>    <img src="https://upload-images.jianshu.io/upload_images/9989643-acade8e959fc6416.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/801/format/webp" alt=""></arch></version></p><h4 id="6-测试版本的切换"><a href="#6-测试版本的切换" class="headerlink" title="6.测试版本的切换"></a>6.测试版本的切换</h4><p>刚刚下载了node 6.9.0版本并且成功使用，现在我们下载一个6.10.3版本，然后切换并使用。<br><img src="https://upload-images.jianshu.io/upload_images/9989643-18d1e1c29f5ed073.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/747/format/webp" alt=""></p><h4 id="7-nvm-ls-查看已经安装的版本"><a href="#7-nvm-ls-查看已经安装的版本" class="headerlink" title="7.nvm ls 查看已经安装的版本"></a>7.nvm ls 查看已经安装的版本</h4><p><img src="https://upload-images.jianshu.io/upload_images/2793567-e3e91b29a53dfa47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/305/format/webp" alt=""><br><em>default nvm 默认使用的版本</em>   node和stable 当前安装的node的最新的稳定版本<em>   iojs iojs的最新稳定版本</em>   lts/<em> node lts 系列最新的稳定版本</em>   lts/argon,lts/boron,lts/carbon分别指lts的三个大的版本的最新版本</p><p>此时 NVM 已经安装完成正常使用</p><h4 id="三、nrm-介绍"><a href="#三、nrm-介绍" class="headerlink" title="三、nrm 介绍"></a>三、nrm 介绍</h4><p>　开发的npm registry 管理工具 <a href="https://github.com/Pana/nrm" target="_blank" rel="noopener">nrm</a>, 能够查看和切换当前使用的registry, 最近NPM经常 down 掉, 这个还是很有用的哈哈<br>顾名思义，就是说nrm是一个管理npm的工具</p><h3 id="四、nrm-安装使用"><a href="#四、nrm-安装使用" class="headerlink" title="四、nrm 安装使用"></a>四、nrm 安装使用</h3><h3 id="1-安装-nrm"><a href="#1-安装-nrm" class="headerlink" title="1.安装 nrm"></a>1.安装 nrm</h3><pre><code>$ npm install -g nrm</code></pre><h3 id="2-nrm命令"><a href="#2-nrm命令" class="headerlink" title="2.nrm命令"></a>2.nrm命令</h3><p>_$_ nrm ls　　// 查看所有的支持源（有*号的表示当前所使用的源,以下[name]表示源的名称）</p><p>$ nrm use [name]　　// 将npm下载源切换成指定的源</p><p>$ nrm help　　// 查看nrm帮助</p><p>$ nrm home [name]　　// 跳转到指定源的官网</p><p>如果在你的网络不太理想或者在不能FQ的情况下，又或者收到其他网络限制导致不能使用npm原本的源进行下载时nrm就非常有用了，你只需要<br>  $ nrm ls<br><img src="http://wx1.sinaimg.cn/mw690/006jw4xkly1g02ve0u53kj30fm09ewej.jpg" alt=""><br>$ nrm use [name]<br><img src="http://wx3.sinaimg.cn/mw690/006jw4xkly1g02ve4pyfoj30cp03y0sn.jpg" alt=""><br>即可轻松使用npm进行下载自己所需要的包及工具了。</p>]]></content>
      
      
      <categories>
          
          <category> 版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NVM </tag>
            
            <tag> nrm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/01/27/hello-world/"/>
      <url>/2019/01/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hello World </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次gitHub+hexo+hexo-theme-matery搭建博客</title>
      <link href="/2019/01/12/%E8%AE%B0%E4%B8%80%E6%AC%A1gitHub-hexo-hexo-theme-matery%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/01/12/%E8%AE%B0%E4%B8%80%E6%AC%A1gitHub-hexo-hexo-theme-matery%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p><img src="http://pl7h7g4ko.bkt.clouddn.com/18699405_p0.jpg" alt="壁纸" title="&#39;壁纸&#39;"></p><h1 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h1><p>一天多的时间使用hexo搭建github-pages博客，采用了 <a href="https://blinkfox.github.io/" target="_blank" rel="noopener">hexo-theme-matery</a>主题，总结一下。<br><a href="https://blinkfox.github.io/" target="_blank">闪烁之狐</a></p><h3 id="1、安装Hexo"><a href="#1、安装Hexo" class="headerlink" title="1、安装Hexo"></a>1、安装Hexo</h3><pre><code>     $ npm install -g hexo</code></pre><h5 id="如果觉得安装的比较慢，可以使用cnpm"><a href="#如果觉得安装的比较慢，可以使用cnpm" class="headerlink" title="如果觉得安装的比较慢，可以使用cnpm"></a>如果觉得安装的比较慢，可以使用cnpm</h5><pre><code>    $ cnpm install -g hexo</code></pre><h3 id="2、部署Hexo"><a href="#2、部署Hexo" class="headerlink" title="2、部署Hexo"></a>2、部署Hexo</h3><pre><code>    $ hexo init</code></pre><h5 id="注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。"><a href="#注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。" class="headerlink" title="注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。"></a>注：这个命令会初始化博客的目录，所以，执行这个命令时，在你想创建的目录下执行，就自动生成到对应目录下。</h5><p>执行命令生，会在当前命令的路径下，生成以下文件：</p><pre><code>    .    ├── .deploy         //执行hexo deploy命令部署到GitHub上的内容目录    ├── public          //执行hexo generate命令，输出的静态网页内容目录    ├── scaffolds      //layout模板文件目录，其中的md文件可以添加编辑    ├── scripts        //扩展脚本目录，这里可以自定义一些javascript脚本    ├── source         //文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。      |   ├── _drafts    //草稿文章    |   └── _posts     //发布文章    ├── themes          //主题文件目录    ├── _config.yml     //全局配置文件，大多数的设置都在这里    └── package.json     //应用程序数据，指明hexo的版本等信息</code></pre><h3 id="3、Hexo命令"><a href="#3、Hexo命令" class="headerlink" title="3、Hexo命令"></a>3、Hexo命令</h3><p>Hexo下，通过 _config.yml 设置博客，可以想象成我们用的软件里的设置一样，只是它通过一个文件列出这些参数，然后让我们填写和修改。</p><ul><li>全局设置<br>在你博客目录下有一个文件名_config.yml，打开可以配置信息。</li><li>局部设置<br>在你博客目录下 \themes\你使用的主题\_config.yml</li><li><p>写博客相关命令</p><pre><code>  Hexo常用命令：  hexo new &quot;postName&quot;       #新建文章  hexo new page &quot;pageName&quot;  #新建页面  hexo generate             #生成静态页面至public目录  hexo server               #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）  hexo deploy               #将.deploy目录部署到GitHub</code></pre><p>当然，如果每次输入那么长命令，那么一定想到用简写：</p><pre><code>  hexo n == hexo new  hexo g == hexo generate  hexo s == hexo server  hexo d == hexo deploy</code></pre><p>其它的，还可以<em>复合命令</em>：</p><pre><code>  # 生成完毕后自动部署网站,两个命令的作用是相同的  $ hexo g -d  $ hexo d -g</code></pre><p>有时候生成的网页出错了，而生成的rss其实没有清除，那么用下面的命令，在重新生成吧</p><pre><code>  $ hexo clean</code></pre><p>当本地调试出现诡异现象时候，请先使用 hexo clean 清理已经生成的静态文件后重试。</p></li></ul><blockquote><p>注：Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。Github的版本库通常建议同时附上README.md说明文件,但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？<br>在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。</p></blockquote><h3 id="4、博客管理"><a href="#4、博客管理" class="headerlink" title="4、博客管理"></a>4、博客管理</h3><p>上面命令中，其实生成文章，可以直接把写好的文章插入到目录/_posts 下面，后缀为.MD就行，在文章头部固定格式：</p><pre><code>    title: Mac提高使用效率的一些方法   #文章的标题，这个才是显示的文章标题，其实文件名不影响    date: 2015-09-01 20:33:26      #用命令会自动生成，也可以自己写，所以文章时间可以改    categories: technology         #文章的分类，这个可以自己定义    tags: [Mac,效率,快捷方式]        #tag，为文章添加标签，方便搜索    ---</code></pre><p>当然，里面有很多东西的，如果你专注于写作，那么可以不用太关心了，比如tags标签可以写成下面那样，因为hexo文章的头部文件是用AML来写的。</p><pre><code>tags:    - tag1    - tag2</code></pre><p>如果在博客文章列表中，不想全文显示，可以增加 , 后面的内容就不会显示在列表。<br><code>&lt;!--more--&gt;</code><br>我使用的[hexo-theme-matery]主题默认有缩略，可以不用加这个代码</p><h3 id="5、插件"><a href="#5、插件" class="headerlink" title="5、插件"></a>5、插件</h3><ul><li><p>安装插件</p><pre><code>  $ npm install &lt;plugin-name&gt; --save</code></pre></li><li><p>萌萌哒插件-<a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">参考链接</a><br>1.安装插件</p><pre><code>npm install --save hexo-helper-live2d</code></pre><p>2.复制你喜欢的模型的名字，例如nipsilon<br>3.将以下代码添加到主题配置文件<code>_config.yml</code>，修改&lt;你喜欢的模型名字&gt;：</p><pre><code>live2d:enable: truescriptFrom: localpluginRootPath: live2dw/pluginJsPath: lib/pluginModelPath: assets/tagMode: falselog: falsemodel:  use: live2d-widget-model-&lt;你喜欢的模型名字&gt;display:  position: right  width: 150  height: 300mobile:  show: true</code></pre></li></ul><blockquote><p>参考链接：<br><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo中文官网</a><br><a href="https://space.bilibili.com/362224537?spm_id_from=333.788.b_765f7570696e666f.1" target="_blank" rel="noopener">bilibili周三Josan</a><br><a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">闪烁之狐主题</a><br><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">博客-遇见西门</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora-vue-theme主题介绍</title>
      <link href="/2018/09/07/%E6%96%87%E7%AB%A0Front-matter%E7%A4%BA%E4%BE%8B/"/>
      <url>/2018/09/07/%E6%96%87%E7%AB%A0Front-matter%E7%A4%BA%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
